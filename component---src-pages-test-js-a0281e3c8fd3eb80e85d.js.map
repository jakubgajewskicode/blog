{"version":3,"sources":["webpack:///./src/pages/test.js"],"names":["Hooks","useState","isMenuOpen","setIsMenuOpen","name","setName","surname","setSurname","width","window","innerWidth","setWith","useEffect","handleResize","addEventListener","removeEventListener","useWindowWidth","size","setSize","document","title","onClick","state","disabled","value","onChange","e","target","htmlFor"],"mappings":"2FAAA,wEAEe,SAASA,IAAS,IAAD,EACMC,oBAAS,GAAtCC,EADuB,KACXC,EADW,OAENF,mBAAS,QAA1BG,EAFuB,KAEjBC,EAFiB,OAGAJ,mBAAS,SAAhCK,EAHuB,KAGdC,EAHc,KAIxBC,EAoDR,WAA2B,IAAD,EACCP,mBAASQ,OAAOC,YAAlCF,EADiB,KACVG,EADU,KASxB,OAPAC,qBAAU,WACR,IAAMC,EAAe,kBAAMF,EAAQF,OAAOC,aAE1C,OADAD,OAAOK,iBAAiB,SAAUD,GAC3B,WACLJ,OAAOM,oBAAoB,SAAUF,OAGlCL,EA7DOQ,GAJgB,EAKNf,mBAAS,IAA1BgB,EALuB,KAKjBC,EALiB,KAgB9B,OAJAN,qBAAU,WACRO,SAASC,MAAQhB,EAAO,IAAME,KAI9B,oCACE,6BACE,4BAAQe,QAZW,kBAAMlB,GAAc,SAACmB,GAAD,OAAYA,OAYnD,QACCpB,EACC,4BACE,oCACA,oCACA,sCAEA,MAGN,6BACE,4BAAQqB,UAAWrB,GAAnB,cAGF,iCACE,2BAAOsB,MAAOpB,EAAMqB,SA1BF,SAACC,GAAD,OAAOrB,EAAQqB,EAAEC,OAAOH,UA2B1C,2BAAOA,MAAOlB,EAASmB,SA1BF,SAACC,GAAD,OAAOnB,EAAWmB,EAAEC,OAAOH,WA6BlD,iCAAUhB,GAEV,iCACE,2BAAOoB,QAAQ,QAAf,qBACA,4BAAQJ,MAAOP,EAAMQ,SAhCH,SAACC,GAAD,OAAOR,EAAQQ,EAAEC,OAAOH,SAiCxC,4BAAQA,MAAM,IAAd,aACA,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd","file":"component---src-pages-test-js-a0281e3c8fd3eb80e85d.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function Hooks() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n  const [name, setName] = useState('Page')\n  const [surname, setSurname] = useState('Title')\n  const width = useWindowWidth()\n  const [size, setSize] = useState('')\n\n  const handleToggleMenu = () => setIsMenuOpen((state) => !state)\n  const handleInputName = (e) => setName(e.target.value)\n  const handleInputSurname = (e) => setSurname(e.target.value)\n  const handleSelection = (e) => setSize(e.target.value)\n\n  useEffect(() => {\n    document.title = name + ' ' + surname\n  })\n\n  return (\n    <>\n      <nav>\n        <button onClick={handleToggleMenu}>Open</button>\n        {isMenuOpen ? (\n          <ul>\n            <li>Some</li>\n            <li>Menu</li>\n            <li>Items</li>\n          </ul>\n        ) : null}\n      </nav>\n\n      <div>\n        <button disabled={!isMenuOpen}>Available</button>\n      </div>\n\n      <section>\n        <input value={name} onChange={handleInputName} />\n        <input value={surname} onChange={handleInputSurname} />\n      </section>\n\n      <section>{width}</section>\n\n      <section>\n        <label htmlFor=\"size\">Filter for a size</label>\n        <select value={size} onChange={handleSelection}>\n          <option value=\"\">All Sizes</option>\n          <option value=\"2\"> 2</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n          <option value=\"6\">6</option>\n        </select>\n      </section>\n    </>\n  )\n}\n\n// CustomHooks - We can write them inside render or we can just seperate them to make code cleaner\n\nfunction useWindowWidth() {\n  const [width, setWith] = useState(window.innerWidth)\n  useEffect(() => {\n    const handleResize = () => setWith(window.innerWidth)\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  })\n  return width\n}\n"],"sourceRoot":""}