{"version":3,"sources":["webpack:///./node_modules/@firebase/database/dist/index.esm.js"],"names":["id","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","get","storedVal","getItem","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","str","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","logLevel","VERBOSE","log","bind","logWrapper","prefix","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","Object","defineProperty","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","contains","ValidationPath","path","errorPrefix_","parts_","byteLength_","max","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","domain","indexOf","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","PUSH_CHARS","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","location","protocol","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","decodePath","queryParams","queryString","e_1","_a","results","charAt","_b","_c","next","done","segment","kv","e_1_1","call","decodeQuery","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","isValidRootPathString","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","val","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","root","base12","buildPennant","chunkSize","low","high","childTree","buildBalancedTree","namedNode","middle","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","_this","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","query","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","stringify","op","existing","unused","delta","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","SparseSnapshotTree","children","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","forEachTree","prefixPath","func","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","subtree","Empty","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","values","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","concat","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","write","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","map","childQueries","queryToStop","status","code","reason","toUpperCase","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","readyState","called_1","wrappedFn_1","body","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","href","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","p","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","_e","_f","clientName","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","authTokenData","authToken","xhr","XMLHttpRequest","responseText","Repo","forceRestClient_","app","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","search","authOverride","appId","addTokenChangeListener","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","Promise","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","_staticInstance","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","RepoManager","repos_","useRestClient_","appName","dbUrl","applyEmulatorSettings","databaseFromApp","authProvider","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","createRepo","deleteRepo","appRepos","forceRestClient","repoInternal_","instanceStarted_","INTERNAL","checkDeleted_","rootInternal_","useEmulator","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","initStandalone","customAuthImpl","setComponent","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","_forceRestClient","registerComponent","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports","registerDatabase"],"mappings":"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","file":"d91e9ae9-e8c06b56367b6ee0a0a0.js","sourcesContent":["import \"core-js/modules/es6.object.freeze\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.set\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.date.to-json\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport firebase from '@firebase/app';\nimport { __spread, __values, __extends, __assign, __read, __awaiter, __generator } from 'tslib';\nimport { stringify, jsonEval, contains, assert, base64, stringToByteArray, Sha1, isNodeSdk, stringLength, errorPrefix, validateArgCount, validateCallback, Deferred, assertionError, safeGet, map, validateContextObject, deepCopy, isMobileCordova, base64Encode, isAdmin, isValidFormat, isEmpty, isReactNative, querystring } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param {string} key The key to save the value under\r\n   * @param {?Object} value The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   * @return {*} The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   */\n\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n  /**\r\n   * @param {string} name\r\n   * @return {string}\r\n   */\n\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function createStoragefor(domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\n\n\nvar sha1 = function sha1(str) {\n  var utf8Bytes = stringToByteArray(str);\n  var sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\n\n\nvar buildLogMessage_ = function buildLogMessage_() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n\n    if (Array.isArray(arg) || arg && typeof arg === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function enableLogging(logger_, persistent) {\n  assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\n\n\nvar log = function log() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\n\n\nvar logWrapper = function logWrapper(prefix) {\n  return function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, __spread([prefix], varArgs));\n  };\n};\n/**\r\n * @param {...string} varArgs\r\n */\n\n\nvar error = function error() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\n  logClient.error(message);\n};\n/**\r\n * @param {...string} varArgs\r\n */\n\n\nvar fatal = function fatal() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spread(varArgs));\n  logClient.error(message);\n  throw new Error(message);\n};\n/**\r\n * @param {...*} varArgs\r\n */\n\n\nvar warn = function warn() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function warnIfPageIsSecure() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\n\n\nvar isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n  return typeof data === 'number' && (data !== data || // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\n/**\r\n * @param {function()} fn\r\n */\n\n\nvar executeWhenDOMReady = function executeWhenDOMReady(fn) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function wrappedFn_1() {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      }); // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\n\nvar nameCompare = function nameCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\n\n\nvar stringCompare = function stringCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\n\n\nvar requireKey = function requireKey(key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\n  }\n};\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\n\n\nvar ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  var keys = []; // eslint-disable-next-line guard-for-in\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function splitStringBySize(str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\n\n\nvar doubleToIEEE754String = function doubleToIEEE754String(v) {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  var bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\n\n\nvar isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\n\n\nvar isWindowsStoreApp = function isWindowsStoreApp() {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\n\n\nvar errorForServerCode = function errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  error.code = code.toUpperCase();\n  return error;\n};\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\n\nvar tryParseInt = function tryParseInt(str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= -2147483648 && intVal <= 2147483647) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\n\n\nvar exceptionGuard = function exceptionGuard(fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function beingCrawled() {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n  var timeout = setTimeout(fn, time); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string|Array.<string>} pathOrString Path string to parse,\r\n   *      or another path, or the raw tokens array\r\n   * @param {number=} pieceNum\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Object.defineProperty(Path, \"Empty\", {\n    /**\r\n     * Singleton to represent an empty path\r\n     *\r\n     * @const\r\n     */\n    get: function get() {\n      return new Path('');\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Path.prototype.getFront = function () {\n    if (this.pieceNum_ >= this.pieces_.length) {\n      return null;\n    }\n\n    return this.pieces_[this.pieceNum_];\n  };\n  /**\r\n   * @return {number} The number of segments in this path\r\n   */\n\n\n  Path.prototype.getLength = function () {\n    return this.pieces_.length - this.pieceNum_;\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.popFront = function () {\n    var pieceNum = this.pieceNum_;\n\n    if (pieceNum < this.pieces_.length) {\n      pieceNum++;\n    }\n\n    return new Path(this.pieces_, pieceNum);\n  };\n  /**\r\n   * @return {?string}\r\n   */\n\n\n  Path.prototype.getBack = function () {\n    if (this.pieceNum_ < this.pieces_.length) {\n      return this.pieces_[this.pieces_.length - 1];\n    }\n\n    return null;\n  };\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  };\n\n  Path.prototype.toUrlEncodedString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n      }\n    }\n\n    return pathString || '/';\n  };\n  /**\r\n   * Shallow copy of the parts of the path.\r\n   *\r\n   * @param {number=} begin\r\n   * @return {!Array<string>}\r\n   */\n\n\n  Path.prototype.slice = function (begin) {\n    if (begin === void 0) {\n      begin = 0;\n    }\n\n    return this.pieces_.slice(this.pieceNum_ + begin);\n  };\n  /**\r\n   * @return {?Path}\r\n   */\n\n\n  Path.prototype.parent = function () {\n    if (this.pieceNum_ >= this.pieces_.length) {\n      return null;\n    }\n\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @param {string|!Path} childPathObj\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.child = function (childPathObj) {\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    if (childPathObj instanceof Path) {\n      for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n        pieces.push(childPathObj.pieces_[i]);\n      }\n    } else {\n      var childPieces = childPathObj.split('/');\n\n      for (var i = 0; i < childPieces.length; i++) {\n        if (childPieces[i].length > 0) {\n          pieces.push(childPieces[i]);\n        }\n      }\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @return {boolean} True if there are no segments in this path\r\n   */\n\n\n  Path.prototype.isEmpty = function () {\n    return this.pieceNum_ >= this.pieces_.length;\n  };\n  /**\r\n   * @param {!Path} outerPath\r\n   * @param {!Path} innerPath\r\n   * @return {!Path} The path from outerPath to innerPath\r\n   */\n\n\n  Path.relativePath = function (outerPath, innerPath) {\n    var outer = outerPath.getFront(),\n        inner = innerPath.getFront();\n\n    if (outer === null) {\n      return innerPath;\n    } else if (outer === inner) {\n      return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n    } else {\n      throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n    }\n  };\n  /**\r\n   * @param {!Path} left\r\n   * @param {!Path} right\r\n   * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n   */\n\n\n  Path.comparePaths = function (left, right) {\n    var leftKeys = left.slice();\n    var rightKeys = right.slice();\n\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n      var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n\n      if (cmp !== 0) {\n        return cmp;\n      }\n    }\n\n    if (leftKeys.length === rightKeys.length) {\n      return 0;\n    }\n\n    return leftKeys.length < rightKeys.length ? -1 : 1;\n  };\n  /**\r\n   *\r\n   * @param {Path} other\r\n   * @return {boolean} true if paths are the same.\r\n   */\n\n\n  Path.prototype.equals = function (other) {\n    if (this.getLength() !== other.getLength()) {\n      return false;\n    }\n\n    for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   *\r\n   * @param {!Path} other\r\n   * @return {boolean} True if this path is a parent (or the same as) other\r\n   */\n\n\n  Path.prototype.contains = function (other) {\n    var i = this.pieceNum_;\n    var j = other.pieceNum_;\n\n    if (this.getLength() > other.getLength()) {\n      return false;\n    }\n\n    while (i < this.pieces_.length) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n\n      ++i;\n      ++j;\n    }\n\n    return true;\n  };\n\n  return Path;\n}(); // end Path\n\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path Initial Path.\r\n   * @param {string} errorPrefix_ Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    /** @type {!Array<string>} */\n\n    this.parts_ = path.slice();\n    /** @type {number} Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n\n    this.checkValid_();\n  }\n\n  Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n    /** @const {number} Maximum key depth. */\n    get: function get() {\n      return 32;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n    /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n    get: function get() {\n      return 768;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @param {string} child */\n\n  ValidationPath.prototype.push = function (child) {\n    // Count the needed '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ += 1;\n    }\n\n    this.parts_.push(child);\n    this.byteLength_ += stringLength(child);\n    this.checkValid_();\n  };\n\n  ValidationPath.prototype.pop = function () {\n    var last = this.parts_.pop();\n    this.byteLength_ -= stringLength(last); // Un-count the previous '/'\n\n    if (this.parts_.length > 0) {\n      this.byteLength_ -= 1;\n    }\n  };\n\n  ValidationPath.prototype.checkValid_ = function () {\n    if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n      throw new Error(this.errorPrefix_ + 'has a key path longer than ' + ValidationPath.MAX_PATH_LENGTH_BYTES + ' bytes (' + this.byteLength_ + ').');\n    }\n\n    if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n      throw new Error(this.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + ValidationPath.MAX_PATH_DEPTH + ') or object contains a cycle ' + this.toErrorString());\n    }\n  };\n  /**\r\n   * String for use in error messages - uses '.' notation for path.\r\n   *\r\n   * @return {string}\r\n   */\n\n\n  ValidationPath.prototype.toErrorString = function () {\n    if (this.parts_.length === 0) {\n      return '';\n    }\n\n    return \"in property '\" + this.parts_.join('.') + \"'\";\n  };\n\n  return ValidationPath;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f';\nvar FORGE_DOMAIN = 'firebaseio.com';\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param host Hostname portion of the url for the repo\r\n   * @param secure Whether or not this repo is accessed over ssl\r\n   * @param namespace The namespace represented by the repo\r\n   * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param nodeAdmin Whether this instance uses Admin SDK credentials\r\n   * @param persistenceKey Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\n    if (nodeAdmin === void 0) {\n      nodeAdmin = false;\n    }\n\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.nodeAdmin = nodeAdmin;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this.host = host.toLowerCase();\n    this.domain = this.host.substr(this.host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this.host;\n  }\n\n  RepoInfo.prototype.needsQueryParam = function () {\n    return this.host !== this.internalHost || this.isCustomHost() || this.includeNamespaceInQueryParams;\n  };\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isDemoHost = function () {\n    return this.domain === 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.updateHost = function (newHost) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this.host, this.internalHost);\n      }\n    }\n  };\n  /**\r\n   * Returns the websocket URL for this repo\r\n   * @param {string} type of connection\r\n   * @param {Object} params list\r\n   * @return {string} The URL for this repo\r\n   */\n\n\n  RepoInfo.prototype.connectionURL = function (type, params) {\n    assert(typeof type === 'string', 'typeof type must == string');\n    assert(typeof params === 'object', 'typeof params must == object');\n    var connURL;\n\n    if (type === WEBSOCKET) {\n      connURL = (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n    } else if (type === LONG_POLLING) {\n      connURL = (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n    } else {\n      throw new Error('Unknown connection type: ' + type);\n    }\n\n    if (this.needsQueryParam()) {\n      params['ns'] = this.namespace;\n    }\n\n    var pairs = [];\n    each(params, function (key, value) {\n      pairs.push(key + '=' + value);\n    });\n    return connURL + pairs.join('&');\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toURLString = function () {\n    return (this.secure ? 'https://' : 'http://') + this.host;\n  };\n\n  return RepoInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n\nvar parseRepoInfo = function parseRepoInfo(dataURL, nodeAdmin) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\n\n\nvar parseDatabaseURL = function parseDatabaseURL(dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    var hostWithoutPort = host.slice(0, colonInd);\n\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1); // Normalize namespaces to lowercase to share storage / connection.\n\n      namespace = subdomain;\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\n\nvar isValidKey = function isValidKey(key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidPathString = function isValidPathString(pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidRootPathString = function isValidRootPathString(pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\n\n\nvar isValidPriority = function isValidPriority(priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseDataArg = function validateFirebaseDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefix(fnName, argumentNumber, optional), data, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\n\n\nvar validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + path.toErrorString() + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + path.toErrorString() + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + path.toErrorString() + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      path.push(key);\n      validateFirebaseData(errorPrefix, value, path);\n      path.pop();\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + path.toErrorString() + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\n\n\nvar validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = curPath.slice();\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(Path.comparePaths);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && prevPath.contains(curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  var errorPrefix$1 = errorPrefix(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix$1, value, path.child(curPath));\n\n    if (curPath.getBack() === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix$1 + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix$1, mergePaths);\n};\n\nvar validatePriority = function validatePriority(fnName, argumentNumber, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  } // Special case to allow importing data with a .sv.\n\n\n  if (!isValidPriority(priority)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\n\nvar validateEventType = function validateEventType(fnName, argumentNumber, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function validateKey(fnName, argumentNumber, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n\n  if (!isValidKey(key)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\n\nvar validatePathString = function validatePathString(fnName, argumentNumber, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\n\nvar validateRootPathString = function validateRootPathString(fnName, argumentNumber, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nvar validateWritablePath = function validateWritablePath(fnName, path) {\n  if (path.getFront() === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function validateUrl(fnName, argumentNumber, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, false) + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function validateBoolean(fnName, argumentNumber, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n\n  if (typeof bool !== 'boolean') {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Repo} repo_\r\n   * @param {!Path} path_\r\n   */\n  function OnDisconnect(repo_, path_) {\n    this.repo_ = repo_;\n    this.path_ = path_;\n  }\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    validateCallback('OnDisconnect.set', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {number|string|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n    validateCallback('OnDisconnect.update', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   * @constructor\r\n   * @dict\r\n   * @param {boolean} committed\r\n   * @param {DataSnapshot} snapshot\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\n\nvar nextPushId = function () {\n  // Modeled after base64 web-safe chars, but ordered by ASCII.\n  var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz'; // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n  /**\r\n   *\r\n   * @param {!string} name\r\n   * @param {!Node} node\r\n   * @return {NamedNode}\r\n   */\n\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @constructor\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   * @param {!Node} oldNode\r\n   * @param {!Node} newNode\r\n   * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  __extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function get() {\n      return __EMPTY_NODE;\n    },\n    set: function set(val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @inheritDoc\r\n   */\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar MAX_NODE;\n\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\n\n\nvar priorityHashText = function priorityHashText(priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\n\n\nvar validatePriorityNode = function validatePriorityNode(priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @implements {Node}\r\n   * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n   *                                         The object type is possible in the event of a deferred value\r\n   * @param {!Node=} priorityNode_ The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function get() {\n      return __childrenNodeConstructor;\n    },\n    set: function set(val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else if (path.getFront() === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @return {Object|string|number|boolean} The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   * @param {!LeafNode} otherLeaf\r\n   * @return {!number}\r\n   * @private\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.equals = function (other) {\n    /**\r\n     * @inheritDoc\r\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   * @type {Array.<!string>}\r\n   * @const\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  __extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V, T\r\n   * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n   * @param {?K} startKey\r\n   * @param {function(K, K): number} comparator\r\n   * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n   * @param {(function(K, V):T)=} resultGenerator_\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    /** @private\r\n     * @type {Array.<!LLRBNode>}\r\n     */\n\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_.pop();\n    var result;\n\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {!K} key Key associated with this node.\r\n   * @param {!V} value Value associated with this node.\r\n   * @param {?boolean} color Whether this node is red.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param {?K} key New key for the node, or null.\r\n   * @param {?V} value New value for the node, or null.\r\n   * @param {?boolean} color New color for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n   * @return {!LLRBNode} The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {*} True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @return {!Object} The minimum node in the tree.\r\n   * @private\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Object} key Key to insert.\r\n   * @param {!Object} value Value to insert.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param {!Object} key The key of the item to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @private\r\n   * @return {boolean} True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @return {!LLRBEmptyNode} The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBEmptyNode} New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {function(K, K):number} comparator_ Key comparator.\r\n   * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @return {!SortedMap.<K, V>} New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @return {!SortedMap.<K, V>} New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param {!K} key The key to look up.\r\n   * @return {?V} The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param {K} key The key to find the predecessor of\r\n   * @return {?K} The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @return {boolean} True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @return {number} The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @return {?K} The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @return {?K} The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @template T\r\n   * @param {(function(K, V):T)=} resultGenerator\r\n   * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   * @const\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_2 = Math.log(2);\n/**\r\n * @constructor\r\n */\n\nvar Base12Num =\n/** @class */\nfunction () {\n  /**\r\n   * @param {number} length\r\n   */\n  function Base12Num(length) {\n    var logBase2 = function logBase2(num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function bitMask(bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\n\n\nvar buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function buildBalancedTree(low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function buildFrom12Array(base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function buildPennant(chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function attachPennant(pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function get() {\n      assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = safeGet(this.indexes_, indexKey);\n\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = __assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = __assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\n      var index = safeGet(_this.indexSet_, indexName);\n      assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!SortedMap.<string, !Node>} children_ List of children\r\n   * of this node..\r\n   * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n   * @param {!IndexMap} indexMap_\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function get() {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(path.popFront());\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = []; // eslint-disable-next-line guard-for-in\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n  /**\r\n   *\r\n   * @param {!NamedNode} startPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n  /**\r\n   * @param {!NamedNode} endPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   * @private\r\n   * @param {!Index} indexDefinition\r\n   * @return {?SortedMap.<NamedNode, Node>}\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n  /**\r\n   * @private\r\n   * @type {RegExp}\r\n   */\n\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\n\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  __extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\n\n\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\n\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON$1);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  __extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  __extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n  /**\r\n   * @param {!Node} snap\r\n   * @return {!Node}\r\n   * @protected\r\n   */\n\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.toString = function () {\n    return this.indexPath_.slice().join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_ A SnapshotNode to wrap.\r\n   * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n   * @param {!Index} index_ The iteration order for this snapshot\r\n   */\n  function DataSnapshot(node_, ref_, index_) {\n    this.node_ = node_;\n    this.ref_ = ref_;\n    this.index_ = index_;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {!DataSnapshot} DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (childPathString) {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    var childRef = this.ref_.child(childPath);\n    return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {boolean} Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (childPathString) {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @return {string|number|null} The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length); // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n\n    return this.node_.getPriority().val();\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param {function(!DataSnapshot)} action Callback function to be called\r\n   * for each child.\r\n   * @return {boolean} True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 1, action, false);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    }\n\n    var childrenNode = this.node_; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this.index_, function (key, node) {\n      return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    } else {\n      return !this.node_.isEmpty();\n    }\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function get() {\n      return this.ref_.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @return {number} The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this.node_.numChildren();\n  };\n  /**\r\n   * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return this.ref_;\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n   * @param {!DataSnapshot} snapshot The data backing the event\r\n   * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.getRef();\n\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {EventRegistration} eventRegistration\r\n   * @param {Error} error\r\n   * @param {!Path} path\r\n   */\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?function(!DataSnapshot)} callback_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {?Object} context_\r\n   */\n  function ValueEventRegistration(callback_, cancelCallback_, context_) {\n    this.callback_ = callback_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_1 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_1.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_1 = this.callback_;\n      return function () {\n        cb_1.call(ctx, eventData.snapshot);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callback_ === this.callback_ && other.context_ === this.context_;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callback_ !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {Object=} context_\r\n   */\n  function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n    this.callbacks_ = callbacks_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return contains(this.callbacks_, eventToCheck);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    assert(change.childName != null, 'Child events should have a childName.');\n    var ref = query.getRef().child(\n    /** @type {!string} */\n    change.childName);\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_2 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_2.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_2 = this.callbacks_[eventData.eventType];\n      return function () {\n        cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    var _this = this;\n\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        var otherKeys = Object.keys(other.callbacks_);\n        var thisKeys = Object.keys(this.callbacks_);\n        var otherCount = otherKeys.length;\n        var thisCount = thisKeys.length;\n\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n          if (otherCount === 1) {\n            var otherKey = otherKeys[0];\n            var thisKey = thisKeys[0];\n            return thisKey === otherKey && (!other.callbacks_[otherKey] || !this.callbacks_[thisKey] || other.callbacks_[otherKey] === this.callbacks_[thisKey]);\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(function (eventType) {\n              return other.callbacks_[eventType] === _this.callbacks_[eventType];\n            });\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbacks_ !== null;\n  };\n\n  return ChildEventRegistration;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor;\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(repo, path, queryParams_, orderByCalled_) {\n    this.repo = repo;\n    this.path = path;\n    this.queryParams_ = queryParams_;\n    this.orderByCalled_ = orderByCalled_;\n  }\n\n  Object.defineProperty(Query, \"__referenceConstructor\", {\n    get: function get() {\n      assert(__referenceConstructor, 'Reference.ts has not been loaded');\n      return __referenceConstructor;\n    },\n    set: function set(val) {\n      __referenceConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Validates start/end values for queries.\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n  Query.validateQueryEndpoints_ = function (params) {\n    var startNode = null;\n    var endNode = null;\n\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n      var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' + 'or equalTo() must be a string.';\n\n      if (params.hasStart()) {\n        var startName = params.getIndexStartName();\n\n        if (startName !== MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n\n      if (params.hasEnd()) {\n        var endName = params.getIndexEndName();\n\n        if (endName !== MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n        throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\n      }\n    } else {\n      assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n      if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n        throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' + 'an object.');\n      }\n    }\n  };\n  /**\r\n   * Validates that limit* has been called with the correct combination of parameters\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n\n  Query.validateLimit_ = function (params) {\n    if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n      throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\n    }\n  };\n  /**\r\n   * Validates that no other order by call has been made\r\n   * @param {!string} fnName\r\n   * @private\r\n   */\n\n\n  Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   */\n\n\n  Query.prototype.getQueryParams = function () {\n    return this.queryParams_;\n  };\n  /**\r\n   * @return {!Reference}\r\n   */\n\n\n  Query.prototype.getRef = function () {\n    validateArgCount('Query.ref', 0, 0, arguments.length); // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n\n    return new Query.__referenceConstructor(this.repo, this.path);\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @param {!function(DataSnapshot, string=)} callback\r\n   * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n   * @param {Object=} context\r\n   * @return {!function(DataSnapshot, string=)}\r\n   */\n\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    validateCallback('Query.on', 2, callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      var callbacks = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n\n    return callback;\n  };\n  /**\r\n   * @param {!function(!DataSnapshot)} callback\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n    var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n    var container = new ChildEventRegistration(callbacks, cancelCallback, context);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {string=} eventType\r\n   * @param {(function(!DataSnapshot, ?string=))=} callback\r\n   * @param {Object=} context\r\n   */\n\n\n  Query.prototype.off = function (eventType, callback, context) {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    validateCallback('Query.off', 2, callback, true);\n    validateContextObject('Query.off', 3, context, true);\n    var container = null;\n    var callbacks = null;\n\n    if (eventType === 'value') {\n      var valueCallback = callback || null;\n      container = new ValueEventRegistration(valueCallback, null, context || null);\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n\n    this.repo.removeEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   * @param {!string} eventType\r\n   * @param {!function(!DataSnapshot, string=)} userCallback\r\n   * @param failureCallbackOrContext\r\n   * @param context\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    validateCallback('Query.once', 2, userCallback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context); // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n\n    var firstCall = true;\n    var deferred = new Deferred(); // A dummy error handler in case a user wasn't expecting promises\n\n    deferred.promise[\"catch\"](function () {});\n\n    var onceCallback = function onceCallback(snapshot) {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n\n        _this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(eventType, onceCallback,\n    /*cancel=*/\n    function (err) {\n      _this.off(eventType, onceCallback);\n\n      if (ret.cancel) {\n        ret.cancel.bind(ret.context)(err);\n      }\n\n      deferred.reject(err);\n    });\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToLast: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   * @param {!string} path\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n\n    if (path === '$key') {\n      throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n    } else if (path === '$priority') {\n      throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n    } else if (path === '$value') {\n      throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n    }\n\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    var parsedPath = new Path(path);\n\n    if (parsedPath.isEmpty()) {\n      throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = this.queryParams_.orderBy(index);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    var newParams = this.queryParams_.orderBy(KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    var newParams = this.queryParams_.orderBy(VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n    var newParams = this.queryParams_.startAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' + 'or equalTo).');\n    } // Calling with no params tells us to start at the beginning.\n\n\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n    var newParams = this.queryParams_.endAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   * @param {number|string|boolean|null} value\r\n   * @param {string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' + 'equalTo).');\n    }\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n    }\n\n    return this.startAt(value, name).endAt(value, name);\n  };\n  /**\r\n   * @return {!string} URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this.repo.toString() + this.path.toUrlEncodedString();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  };\n  /**\r\n   * An object representation of the query parameters used by this Query.\r\n   * @return {!Object}\r\n   */\n\n\n  Query.prototype.queryObject = function () {\n    return this.queryParams_.getQueryObject();\n  };\n  /**\r\n   * @return {!string}\r\n   */\n\n\n  Query.prototype.queryIdentifier = function () {\n    var obj = this.queryObject();\n    var id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   * @param {Query} other\r\n   * @return {boolean}\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    var sameRepo = this.repo === other.repo;\n    var samePath = this.path.equals(other.path);\n    var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param {!string} fnName The function name (on or once)\r\n   * @param {(function(Error)|Object)=} cancelOrContext\r\n   * @param {Object=} context\r\n   * @return {{cancel: ?function(Error), context: ?Object}}\r\n   * @private\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: null,\n      context: null\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      validateCallback(fnName, 3, ret.cancel, true);\n      ret.context = context;\n      validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(errorPrefix(fnName, 3, true) + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistingValueProvider =\n/** @class */\nfunction () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n\n  return ExistingValueProvider;\n}();\n\nvar DeferredValueProvider =\n/** @class */\nfunction () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = this.path_.child(childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n\n  DeferredValueProvider.prototype.node = function () {\n    return this.syncTree_.calcCompleteEventCache(this.path_);\n  };\n\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\n\n\nvar generateWithValues = function generateWithValues(values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\n\n\nvar resolveDeferredLeafValue = function resolveDeferredLeafValue(value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function resolveScalarDeferredValue(op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function resolveComplexDeferredValue(op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  var existingNode = existing.node();\n  assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls'); // Incrementing a non-number sets the value to the incremented amount\n\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\n\n\nvar resolveDeferredValueTree = function resolveDeferredValueTree(path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\n\n\nvar resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\n\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\n\n\nvar SparseSnapshotTree =\n/** @class */\nfunction () {\n  function SparseSnapshotTree() {\n    this.value = null;\n    this.children = new Map();\n  }\n  /**\r\n   * Gets the node stored at the given path if one exists.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return The retrieved node, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.find = function (path) {\n    if (this.value != null) {\n      return this.value.getChild(path);\n    } else if (!path.isEmpty() && this.children.size > 0) {\n      var childKey = path.getFront();\n      path = path.popFront();\n\n      if (this.children.has(childKey)) {\n        var childTree = this.children.get(childKey);\n        return childTree.find(path);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Stores the given node at the specified path. If there is already a node\r\n   * at a shallower path, it merges the new data into that snapshot node.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @param data The new data, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.remember = function (path, data) {\n    if (path.isEmpty()) {\n      this.value = data;\n      this.children.clear();\n    } else if (this.value !== null) {\n      this.value = this.value.updateChild(path, data);\n    } else {\n      var childKey = path.getFront();\n\n      if (!this.children.has(childKey)) {\n        this.children.set(childKey, new SparseSnapshotTree());\n      }\n\n      var child = this.children.get(childKey);\n      path = path.popFront();\n      child.remember(path, data);\n    }\n  };\n  /**\r\n   * Purge the data at path from the cache.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return True if this node should now be removed.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forget = function (path) {\n    if (path.isEmpty()) {\n      this.value = null;\n      this.children.clear();\n      return true;\n    } else {\n      if (this.value !== null) {\n        if (this.value.isLeafNode()) {\n          // We're trying to forget a node that doesn't exist\n          return false;\n        } else {\n          var value = this.value;\n          this.value = null;\n          var self_1 = this;\n          value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n            self_1.remember(new Path(key), tree);\n          });\n          return this.forget(path);\n        }\n      } else if (this.children.size > 0) {\n        var childKey = path.getFront();\n        path = path.popFront();\n\n        if (this.children.has(childKey)) {\n          var safeToRemove = this.children.get(childKey).forget(path);\n\n          if (safeToRemove) {\n            this.children[\"delete\"](childKey);\n          }\n        }\n\n        return this.children.size === 0;\n      } else {\n        return true;\n      }\n    }\n  };\n  /**\r\n   * Recursively iterates through all of the stored tree and calls the\r\n   * callback on each one.\r\n   *\r\n   * @param prefixPath Path to look up node for.\r\n   * @param func The function to invoke for each tree.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n    if (this.value !== null) {\n      func(prefixPath, this.value);\n    } else {\n      this.forEachChild(function (key, tree) {\n        var path = new Path(prefixPath.toString() + '/' + key);\n        tree.forEachTree(path, func);\n      });\n    }\n  };\n  /**\r\n   * Iterates through each immediate child and triggers the callback.\r\n   *\r\n   * @param func The function to invoke for each child.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachChild = function (func) {\n    this.children.forEach(function (tree, key) {\n      func(key, tree);\n    });\n  };\n\n  return SparseSnapshotTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\n\n\nvar OperationSource =\n/** @class */\nfunction () {\n  function OperationSource(fromUser, fromServer, queryId, tagged) {\n    this.fromUser = fromUser;\n    this.fromServer = fromServer;\n    this.queryId = queryId;\n    this.tagged = tagged;\n    assert(!tagged || fromServer, 'Tagged queries must be from server.');\n  }\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n\n  OperationSource.User = new OperationSource(\n  /*fromUser=*/\n  true, false, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n  OperationSource.Server = new OperationSource(false,\n  /*fromServer=*/\n  true, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @param {string} queryId\r\n   * @return {!OperationSource}\r\n   */\n\n  OperationSource.forServerTaggedQuery = function (queryId) {\n    return new OperationSource(false,\n    /*fromServer=*/\n    true, queryId,\n    /*tagged=*/\n    true);\n  };\n\n  return OperationSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n   * @param {!boolean} revert\r\n   */\n  function AckUserWrite(\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  affectedTree,\n  /** @inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = OperationSource.User;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!this.path.isEmpty()) {\n      assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(Path.Empty, childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\n\nvar EmptyChildren = function EmptyChildren() {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {?T} value\r\n   * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n   */\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n  /**\r\n   * @template T\r\n   * @param {!Object.<string, !T>} obj\r\n   * @return {!ImmutableTree.<!T>}\r\n   */\n\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = ImmutableTree.Empty;\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   * @return {boolean}\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n   * on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param {!Path} relativePath The remainder of the path\r\n   * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n   *   node\r\n   * @return {?{path:!Path, value:!T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: Path.Empty,\n        value: this.value\n      };\n    } else {\n      if (relativePath.isEmpty()) {\n        return null;\n      } else {\n        var front = relativePath.getFront();\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = new Path(front).child(childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   * @param {!Path} relativePath\r\n   * @return {?{path: !Path, value: !T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @param {!Path} relativePath\r\n   * @return {!ImmutableTree.<T>} The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this;\n    } else {\n      var front = relativePath.getFront();\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(relativePath.popFront());\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to set value at.\r\n   * @param {?T} toSet Value to set.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (relativePath.isEmpty()) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.set(relativePath.popFront(), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to value to remove.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      if (this.children.isEmpty()) {\n        return ImmutableTree.Empty;\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(relativePath.popFront());\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return ImmutableTree.Empty;\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param {!Path} relativePath Path to get value for.\r\n   * @return {?T} Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this.value;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(relativePath.popFront());\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param {!Path} relativePath Path to replace subtree for.\r\n   * @param {!ImmutableTree} newTree New tree.\r\n   * @return {!ImmutableTree} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (relativePath.isEmpty()) {\n      return newTree;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.setTree(relativePath.popFront(), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   * @template V\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(Path.Empty, fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   * @template V\r\n   * @param {!Path} pathSoFar\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   * @private\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   * @template V\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T):?V} f\r\n   * @return {?V}\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathToFollow.isEmpty()) {\n        return null;\n      } else {\n        var front = pathToFollow.getFront();\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T)} f\r\n   * @returns {!ImmutableTree.<T>}\r\n   */\n\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathToFollow.isEmpty()) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathToFollow.getFront();\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param {function(!Path, !T)} f A function to be called with\r\n   *   the path from the root of the tree to a node, and the value at that node.\r\n   *   Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(currentRelativePath.child(childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n  /**\r\n   *\r\n   * @param {function(string, !T)} f\r\n   */\n\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  ImmutableTree.Empty = new ImmutableTree(null);\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new ListenComplete(this.source, Path.Empty);\n    } else {\n      return new ListenComplete(this.source, this.path.popFront());\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /** @inheritDoc */\n  source,\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, Path.Empty, childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, Path.Empty, childTree);\n      }\n    } else {\n      assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, this.path.popFront(), this.children);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_\r\n   * @param {boolean} fullyInitialized_\r\n   * @param {boolean} filtered_\r\n   */\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (path.isEmpty()) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = path.getFront();\n    return this.isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!string} key\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n  /**\r\n   * @return {!Node}\r\n   */\n\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\n\n\nvar ViewCache =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!CacheNode} eventCache_\r\n   * @param {!CacheNode} serverCache_\r\n   */\n  function ViewCache(eventCache_, serverCache_) {\n    this.eventCache_ = eventCache_;\n    this.serverCache_ = serverCache_;\n  }\n  /**\r\n   * @param {!Node} eventSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n    return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\n  };\n  /**\r\n   * @param {!Node} serverSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n    return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getEventCache = function () {\n    return this.eventCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteEventSnap = function () {\n    return this.eventCache_.isFullyInitialized() ? this.eventCache_.getNode() : null;\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getServerCache = function () {\n    return this.serverCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteServerSnap = function () {\n    return this.serverCache_.isFullyInitialized() ? this.serverCache_.getNode() : null;\n  };\n  /**\r\n   * @const\r\n   * @type {ViewCache}\r\n   */\n\n\n  ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false), new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false));\n  return ViewCache;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\n\n\nvar Change =\n/** @class */\nfunction () {\n  function Change(type, snapshotNode, childName, oldSnap, prevName) {\n    this.type = type;\n    this.snapshotNode = snapshotNode;\n    this.childName = childName;\n    this.oldSnap = oldSnap;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.valueChange = function (snapshot) {\n    return new Change(Change.VALUE, snapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childAddedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_ADDED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childRemovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} newSnapshot\r\n   * @param {!Node} oldSnapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\n    return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childMovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_MOVED, snapshot, childKey);\n  }; //event types\n\n  /** Event type for a child added */\n\n\n  Change.CHILD_ADDED = 'child_added';\n  /** Event type for a child removed */\n\n  Change.CHILD_REMOVED = 'child_removed';\n  /** Event type for a child changed */\n\n  Change.CHILD_CHANGED = 'child_changed';\n  /** Event type for a child moved */\n\n  Change.CHILD_MOVED = 'child_moved';\n  /** Event type for a value change */\n\n  Change.VALUE = 'value';\n  return Change;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\n        } else {\n          assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    assert(type === Change.CHILD_ADDED || type === Change.CHILD_CHANGED || type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\n    assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\n        this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\n      } else if (type === Change.CHILD_REMOVED && oldType === Change.CHILD_ADDED) {\n        this.changeMap[\"delete\"](childKey);\n      } else if (type === Change.CHILD_REMOVED && oldType === Change.CHILD_CHANGED) {\n        this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\n      } else if (type === Change.CHILD_CHANGED && oldType === Change.CHILD_ADDED) {\n        this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\n      } else if (type === Change.CHILD_CHANGED && oldType === Change.CHILD_CHANGED) {\n        this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\n      } else {\n        throw assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!WriteTreeRef} writes_\r\n   * @param {!ViewCache} viewCache_\r\n   * @param {?Node} optCompleteServerCache_\r\n   */\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.getEventCache();\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();\n    var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar ProcessorResult =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Array.<!Change>} changes\r\n   */\n  function ProcessorResult(viewCache, changes) {\n    this.viewCache = viewCache;\n    this.changes = changes;\n  }\n\n  return ProcessorResult;\n}();\n/**\r\n * @constructor\r\n */\n\n\nvar ViewProcessor =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!NodeFilter} filter_\r\n   */\n  function ViewProcessor(filter_) {\n    this.filter_ = filter_;\n  }\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   */\n\n\n  ViewProcessor.prototype.assertIndexed = function (viewCache) {\n    assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n    assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @return {!ProcessorResult}\r\n   */\n\n\n  ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n    var accumulator = new ChildChangeAccumulator();\n    var newViewCache, filterServerNode;\n\n    if (operation.type === OperationType.OVERWRITE) {\n      var overwrite = operation;\n\n      if (overwrite.source.fromUser) {\n        newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n      } else {\n        assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n        // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n        // again\n\n        filterServerNode = overwrite.source.tagged || oldViewCache.getServerCache().isFiltered() && !overwrite.path.isEmpty();\n        newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.MERGE) {\n      var merge = operation;\n\n      if (merge.source.fromUser) {\n        newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n      } else {\n        assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n        filterServerNode = merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n        newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.ACK_USER_WRITE) {\n      var ackUserWrite = operation;\n\n      if (!ackUserWrite.revert) {\n        newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n      } else {\n        newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n      }\n    } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n      newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n    } else {\n      throw assertionError('Unknown operation type: ' + operation.type);\n    }\n\n    var changes = accumulator.getChanges();\n    ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n    return new ProcessorResult(newViewCache, changes);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!ViewCache} newViewCache\r\n   * @param {!Array.<!Change>} accumulator\r\n   * @private\r\n   */\n\n\n  ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n    var eventSnap = newViewCache.getEventCache();\n\n    if (eventSnap.isFullyInitialized()) {\n      var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n      var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n\n      if (accumulator.length > 0 || !oldViewCache.getEventCache().isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(\n      /** @type {!Node} */\n      oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n        accumulator.push(Change.valueChange(\n        /** @type {!Node} */\n        newViewCache.getCompleteEventSnap()));\n      }\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} changePath\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!CompleteChildSource} source\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n    var oldEventSnap = viewCache.getEventCache();\n\n    if (writesCache.shadowingWrite(changePath) != null) {\n      // we have a shadowing write, ignore changes\n      return viewCache;\n    } else {\n      var newEventCache = void 0,\n          serverNode = void 0;\n\n      if (changePath.isEmpty()) {\n        // TODO: figure out how this plays with \"sliding ack windows\"\n        assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n        if (viewCache.getServerCache().isFiltered()) {\n          // We need to special case this, because we need to only apply writes to complete children, or\n          // we might end up raising events for incomplete children. If the server data is filtered deep\n          // writes cannot be guaranteed to be complete\n          var serverCache = viewCache.getCompleteServerSnap();\n          var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n          var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n        } else {\n          var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n        }\n      } else {\n        var childKey = changePath.getFront();\n\n        if (childKey === '.priority') {\n          assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\n          var oldEventNode = oldEventSnap.getNode();\n          serverNode = viewCache.getServerCache().getNode(); // we might have overwrites for this priority\n\n          var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n\n          if (updatedPriority != null) {\n            newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n          } else {\n            // priority didn't change, keep old node\n            newEventCache = oldEventSnap.getNode();\n          }\n        } else {\n          var childChangePath = changePath.popFront(); // update child\n\n          var newEventChild = void 0;\n\n          if (oldEventSnap.isCompleteForChild(childKey)) {\n            serverNode = viewCache.getServerCache().getNode();\n            var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n\n            if (eventChildUpdate != null) {\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n            } else {\n              // Nothing changed, just keep the old child\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n            }\n          } else {\n            newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n          }\n\n          if (newEventChild != null) {\n            newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n          } else {\n            // no complete child available or no change\n            newEventCache = oldEventSnap.getNode();\n          }\n        }\n      }\n\n      return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\n    }\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n    var oldServerSnap = oldViewCache.getServerCache();\n    var newServerCache;\n    var serverFilter = filterServerNode ? this.filter_ : this.filter_.getIndexedFilter();\n\n    if (changePath.isEmpty()) {\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n    } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n      // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n      var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n    } else {\n      var childKey = changePath.getFront();\n\n      if (!oldServerSnap.isCompleteForPath(changePath) && changePath.getLength() > 1) {\n        // We don't update incomplete nodes with updates intended for other listeners\n        return oldViewCache;\n      }\n\n      var childChangePath = changePath.popFront();\n      var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n      var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n      if (childKey === '.priority') {\n        newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n      } else {\n        newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n      }\n    }\n\n    var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n    return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n    var oldEventSnap = oldViewCache.getEventCache();\n    var newViewCache, newEventCache;\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n    if (changePath.isEmpty()) {\n      newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n      newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n    } else {\n      var childKey = changePath.getFront();\n\n      if (childKey === '.priority') {\n        newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n        newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n      } else {\n        var childChangePath = changePath.popFront();\n        var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n        var newChild = void 0;\n\n        if (childChangePath.isEmpty()) {\n          // Child overwrite, we can replace the child\n          newChild = changedSnap;\n        } else {\n          var childNode = source.getCompleteChild(childKey);\n\n          if (childNode != null) {\n            if (childChangePath.getBack() === '.priority' && childNode.getChild(childChangePath.parent()).isEmpty()) {\n              // This is a priority update on an empty node. If this node exists on the server, the\n              // server will send down the priority in the update, so ignore for now\n              newChild = childNode;\n            } else {\n              newChild = childNode.updateChild(childChangePath, changedSnap);\n            }\n          } else {\n            // There is no complete child node available\n            newChild = ChildrenNode.EMPTY_NODE;\n          }\n        }\n\n        if (!oldChild.equals(newChild)) {\n          var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n          newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n        } else {\n          newViewCache = oldViewCache;\n        }\n      }\n    }\n\n    return newViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {string} childKey\r\n   * @return {boolean}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n    return viewCache.getEventCache().isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n    var _this = this; // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!Node} node\r\n   * @param {ImmutableTree.<!Node>} merge\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n    merge.foreach(function (relativePath, childNode) {\n      node = node.updateChild(relativePath, childNode);\n    });\n    return node;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n    var _this = this; // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n    // wait for the complete data update coming soon.\n\n\n    if (viewCache.getServerCache().getNode().isEmpty() && !viewCache.getServerCache().isFullyInitialized()) {\n      return viewCache;\n    } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    var viewMergeTree;\n\n    if (path.isEmpty()) {\n      viewMergeTree = changedChildren;\n    } else {\n      viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\n    }\n\n    var serverNode = viewCache.getServerCache().getNode();\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (serverNode.hasChild(childKey)) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n      var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) && childMergeTree.value == null;\n\n      if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childMergeTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} ackPath\r\n   * @param {!ImmutableTree<!boolean>} affectedTree\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n    if (writesCache.shadowingWrite(ackPath) != null) {\n      return viewCache;\n    } // Only filter server node if it is currently filtered\n\n\n    var filterServerNode = viewCache.getServerCache().isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n    // now that it won't be shadowed.\n\n    var serverCache = viewCache.getServerCache();\n\n    if (affectedTree.value != null) {\n      // This is an overwrite.\n      if (ackPath.isEmpty() && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n        return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n      } else if (ackPath.isEmpty()) {\n        // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n        // should just re-apply whatever we have in our cache as a merge.\n        var changedChildren_1 = ImmutableTree.Empty;\n        serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n          changedChildren_1 = changedChildren_1.set(new Path(name), node);\n        });\n        return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n      } else {\n        return viewCache;\n      }\n    } else {\n      // This is a merge.\n      var changedChildren_2 = ImmutableTree.Empty;\n      affectedTree.foreach(function (mergePath, value) {\n        var serverCachePath = ackPath.child(mergePath);\n\n        if (serverCache.isCompleteForPath(serverCachePath)) {\n          changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n        }\n      });\n      return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n    var oldServerNode = viewCache.getServerCache();\n    var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\n    return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n    var complete;\n\n    if (writesCache.shadowingWrite(path) != null) {\n      return viewCache;\n    } else {\n      var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n      var oldEventCache = viewCache.getEventCache().getNode();\n      var newEventCache = void 0;\n\n      if (path.isEmpty() || path.getFront() === '.priority') {\n        var newNode = void 0;\n\n        if (viewCache.getServerCache().isFullyInitialized()) {\n          newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n        } else {\n          var serverChildren = viewCache.getServerCache().getNode();\n          assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n          newNode = writesCache.calcCompleteEventChildren(serverChildren);\n        }\n\n        newNode = newNode;\n        newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n      } else {\n        var childKey = path.getFront();\n        var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n\n        if (newChild == null && viewCache.getServerCache().isCompleteForChild(childKey)) {\n          newChild = oldEventCache.getImmediateChild(childKey);\n        }\n\n        if (newChild != null) {\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\n        } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n          // No complete child available, delete the existing one, if any\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\n        } else {\n          newEventCache = oldEventCache;\n        }\n\n        if (newEventCache.isEmpty() && viewCache.getServerCache().isFullyInitialized()) {\n          // We might have reverted all child writes. Maybe the old event was a leaf node\n          complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n\n          if (complete.isLeafNode()) {\n            newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n          }\n        }\n      }\n\n      complete = viewCache.getServerCache().isFullyInitialized() || writesCache.shadowingWrite(Path.Empty) != null;\n      return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n    }\n  };\n\n  return ViewProcessor;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   */\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    /**\r\n     * @private\r\n     * @type {!Index}\r\n     */\n\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n  /**\r\n   * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n   * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n   *\r\n   * Notes:\r\n   *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n   *    our index.\r\n   *  - prevName will be calculated based on the index ordering.\r\n   *\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {!Array.<!EventRegistration>} eventRegistrations\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\n    var _this = this;\n\n    var events = [];\n    var moves = [];\n    changes.forEach(function (change) {\n      if (change.type === Change.CHILD_CHANGED && _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n        moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\n      }\n    });\n    this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\n    return events;\n  };\n  /**\r\n   * Given changes of a single change type, generate the corresponding events.\r\n   *\r\n   * @param {!Array.<!Event>} events\r\n   * @param {!string} eventType\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Array.<!EventRegistration>} registrations\r\n   * @param {!Node} eventCache\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\n    var _this = this;\n\n    var filteredChanges = changes.filter(function (change) {\n      return change.type === eventType;\n    });\n    filteredChanges.sort(this.compareChanges_.bind(this));\n    filteredChanges.forEach(function (change) {\n      var materializedChange = _this.materializeSingleChange_(change, eventCache);\n\n      registrations.forEach(function (registration) {\n        if (registration.respondsTo(change.type)) {\n          events.push(registration.createEvent(materializedChange, _this.query_));\n        }\n      });\n    });\n  };\n  /**\r\n   * @param {!Change} change\r\n   * @param {!Node} eventCache\r\n   * @return {!Change}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\n    if (change.type === 'value' || change.type === 'child_removed') {\n      return change;\n    } else {\n      change.prevName = eventCache.getPredecessorChildName(\n      /** @type {!string} */\n      change.childName, change.snapshotNode, this.index_);\n      return change;\n    }\n  };\n  /**\r\n   * @param {!Change} a\r\n   * @param {!Change} b\r\n   * @return {number}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.compareChanges_ = function (a, b) {\n    if (a.childName == null || b.childName == null) {\n      throw assertionError('Should only compare child_ events.');\n    }\n\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n    return this.index_.compare(aWrapped, bWrapped);\n  };\n\n  return EventGenerator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   * @param {!ViewCache} initialViewCache\r\n   */\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_.getQueryParams();\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = params.getNodeFilter();\n    /**\r\n     * @type {ViewProcessor}\r\n     * @private\r\n     */\n\n    this.processor_ = new ViewProcessor(filter);\n    var initialServerCache = initialViewCache.getServerCache();\n    var initialEventCache = initialViewCache.getEventCache(); // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    /**\r\n     * @type {!ViewCache}\r\n     * @private\r\n     */\n\n    this.viewCache_ = new ViewCache(newEventCache, newServerCache);\n    /**\r\n     * @type {!EventGenerator}\r\n     * @private\r\n     */\n\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n  /**\r\n   * @return {!Query}\r\n   */\n\n\n  View.prototype.getQuery = function () {\n    return this.query_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getServerCache = function () {\n    return this.viewCache_.getServerCache().getNode();\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getCompleteServerCache = function (path) {\n    var cache = this.viewCache_.getCompleteServerSnap();\n\n    if (cache) {\n      // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n      // we need to see if it contains the child we're interested in.\n      if (this.query_.getQueryParams().loadsAllData() || !path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty()) {\n        return cache.getChild(path);\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  View.prototype.isEmpty = function () {\n    return this.eventRegistrations_.length === 0;\n  };\n  /**\r\n   * @param {!EventRegistration} eventRegistration\r\n   */\n\n\n  View.prototype.addEventRegistration = function (eventRegistration) {\n    this.eventRegistrations_.push(eventRegistration);\n  };\n  /**\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n   */\n\n\n  View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n    var cancelEvents = [];\n\n    if (cancelError) {\n      assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n      var path_1 = this.query_.path;\n      this.eventRegistrations_.forEach(function (registration) {\n        cancelError\n        /** @type {!Error} */\n        = cancelError;\n        var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n        if (maybeEvent) {\n          cancelEvents.push(maybeEvent);\n        }\n      });\n    }\n\n    if (eventRegistration) {\n      var remaining = [];\n\n      for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n        var existing = this.eventRegistrations_[i];\n\n        if (!existing.matches(eventRegistration)) {\n          remaining.push(existing);\n        } else if (eventRegistration.hasAnyCallback()) {\n          // We're removing just this one\n          remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n          break;\n        }\n      }\n\n      this.eventRegistrations_ = remaining;\n    } else {\n      this.eventRegistrations_ = [];\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n   *\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n    if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n      assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n      assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n    }\n\n    var oldViewCache = this.viewCache_;\n    var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n    this.processor_.assertIndexed(result.viewCache);\n    assert(result.viewCache.getServerCache().isFullyInitialized() || !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n    this.viewCache_ = result.viewCache;\n    return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n  };\n  /**\r\n   * @param {!EventRegistration} registration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.getInitialEvents = function (registration) {\n    var eventSnap = this.viewCache_.getEventCache();\n    var initialChanges = [];\n\n    if (!eventSnap.getNode().isLeafNode()) {\n      var eventNode = eventSnap.getNode();\n      eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        initialChanges.push(Change.childAddedChange(key, childNode));\n      });\n    }\n\n    if (eventSnap.isFullyInitialized()) {\n      initialChanges.push(Change.valueChange(eventSnap.getNode()));\n    }\n\n    return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n  };\n  /**\r\n   * @private\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {EventRegistration=} eventRegistration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n    var registrations = eventRegistration ? [eventRegistration] : this.eventRegistrations_;\n    return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n  };\n\n  return View;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor$1;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n    get: function get() {\n      assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\n      return __referenceConstructor$1;\n    },\n    set: function set(val) {\n      assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\n      __referenceConstructor$1 = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SyncPoint.prototype.isEmpty = function () {\n    return this.views.size === 0;\n  };\n\n  SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n    var e_1, _a;\n\n    var queryId = operation.source.queryId;\n\n    if (queryId !== null) {\n      var view = this.views.get(queryId);\n      assert(view != null, 'SyncTree gave us an op for an invalid query.');\n      return view.applyOperation(operation, writesCache, optCompleteServerCache);\n    } else {\n      var events = [];\n\n      try {\n        for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var view = _c.value;\n          events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @param {!Query} query\r\n   * @param {!EventRegistration} eventRegistration\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache Complete server cache, if we have it.\r\n   * @param {boolean} serverCacheComplete\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n    var queryId = query.queryIdentifier();\n    var view = this.views.get(queryId);\n\n    if (!view) {\n      // TODO: make writesCache take flag for complete server node\n      var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n      var eventCacheComplete = false;\n\n      if (eventCache) {\n        eventCacheComplete = true;\n      } else if (serverCache instanceof ChildrenNode) {\n        eventCache = writesCache.calcCompleteEventChildren(serverCache);\n        eventCacheComplete = false;\n      } else {\n        eventCache = ChildrenNode.EMPTY_NODE;\n        eventCacheComplete = false;\n      }\n\n      var viewCache = new ViewCache(new CacheNode(\n      /** @type {!Node} */\n      eventCache, eventCacheComplete, false), new CacheNode(\n      /** @type {!Node} */\n      serverCache, serverCacheComplete, false));\n      view = new View(query, viewCache);\n      this.views.set(queryId, view);\n    } // This is guaranteed to exist now, we just created anything that was missing\n\n\n    view.addEventRegistration(eventRegistration);\n    return view.getInitialEvents(eventRegistration);\n  };\n  /**\r\n   * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n   *\r\n   * If query is the default query, we'll check all views for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n   *\r\n   * @param {!Query} query\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n   */\n\n\n  SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var e_2, _a;\n\n    var queryId = query.queryIdentifier();\n    var removed = [];\n    var cancelEvents = [];\n    var hadCompleteView = this.hasCompleteView();\n\n    if (queryId === 'default') {\n      try {\n        // When you do ref.off(...), we search all views for the registration to remove.\n        for (var _b = __values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var _d = __read(_c.value, 2),\n              viewQueryId = _d[0],\n              view = _d[1];\n\n          cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n          if (view.isEmpty()) {\n            this.views[\"delete\"](viewQueryId); // We'll deal with complete views later.\n\n            if (!view.getQuery().getQueryParams().loadsAllData()) {\n              removed.push(view.getQuery());\n            }\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    } else {\n      // remove the callback from the specific view.\n      var view = this.views.get(queryId);\n\n      if (view) {\n        cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n        if (view.isEmpty()) {\n          this.views[\"delete\"](queryId); // We'll deal with complete views later.\n\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    }\n\n    if (hadCompleteView && !this.hasCompleteView()) {\n      // We removed our last complete view.\n      removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n    }\n\n    return {\n      removed: removed,\n      events: cancelEvents\n    };\n  };\n\n  SyncPoint.prototype.getQueryViews = function () {\n    var e_3, _a;\n\n    var result = [];\n\n    try {\n      for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (!view.getQuery().getQueryParams().loadsAllData()) {\n          result.push(view);\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return result;\n  };\n  /**\r\n   * @param path The path to the desired complete snapshot\r\n   * @return A complete cache, if it exists\r\n   */\n\n\n  SyncPoint.prototype.getCompleteServerCache = function (path) {\n    var e_4, _a;\n\n    var serverCache = null;\n\n    try {\n      for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        serverCache = serverCache || view.getCompleteServerCache(path);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return serverCache;\n  };\n\n  SyncPoint.prototype.viewForQuery = function (query) {\n    var params = query.getQueryParams();\n\n    if (params.loadsAllData()) {\n      return this.getCompleteView();\n    } else {\n      var queryId = query.queryIdentifier();\n      return this.views.get(queryId);\n    }\n  };\n\n  SyncPoint.prototype.viewExistsForQuery = function (query) {\n    return this.viewForQuery(query) != null;\n  };\n\n  SyncPoint.prototype.hasCompleteView = function () {\n    return this.getCompleteView() != null;\n  };\n\n  SyncPoint.prototype.getCompleteView = function () {\n    var e_5, _a;\n\n    try {\n      for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (view.getQuery().getQueryParams().loadsAllData()) {\n          return view;\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return null;\n  };\n\n  return SyncPoint;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.prototype.addWrite = function (path, node) {\n    if (path.isEmpty()) {\n      return new CompoundWrite(new ImmutableTree(node));\n    } else {\n      var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n      if (rootmost != null) {\n        var rootMostPath = rootmost.path;\n        var value = rootmost.value;\n        var relativePath = Path.relativePath(rootMostPath, path);\n        value = value.updateChild(relativePath, node);\n        return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n      } else {\n        var subtree = new ImmutableTree(node);\n        var newWriteTree = this.writeTree_.setTree(path, subtree);\n        return new CompoundWrite(newWriteTree);\n      }\n    }\n  };\n\n  CompoundWrite.prototype.addWrites = function (path, updates) {\n    var newWrite = this;\n    each(updates, function (childKey, node) {\n      newWrite = newWrite.addWrite(path.child(childKey), node);\n    });\n    return newWrite;\n  };\n  /**\r\n   * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n   * location, which must be removed by calling this method with that path.\r\n   *\r\n   * @param path The path at which a write and all deeper writes should be removed\r\n   * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n   */\n\n\n  CompoundWrite.prototype.removeWrite = function (path) {\n    if (path.isEmpty()) {\n      return CompoundWrite.Empty;\n    } else {\n      var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\n      return new CompoundWrite(newWriteTree);\n    }\n  };\n  /**\r\n   * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n   * considered \"complete\".\r\n   *\r\n   * @param path The path to check for\r\n   * @return Whether there is a complete write at that path\r\n   */\n\n\n  CompoundWrite.prototype.hasCompleteWrite = function (path) {\n    return this.getCompleteNode(path) != null;\n  };\n  /**\r\n   * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n   * writes from deeper paths, but will return child nodes from a more shallow path.\r\n   *\r\n   * @param path The path to get a complete write\r\n   * @return The node if complete at that path, or null otherwise.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteNode = function (path) {\n    var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      return this.writeTree_.get(rootmost.path).getChild(Path.relativePath(rootmost.path, path));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Returns all children that are guaranteed to be a complete overwrite.\r\n   *\r\n   * @return A list of all complete children.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteChildren = function () {\n    var children = [];\n    var node = this.writeTree_.value;\n\n    if (node != null) {\n      // If it's a leaf node, it has no children; so nothing to do.\n      if (!node.isLeafNode()) {\n        node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n          children.push(new NamedNode(childName, childNode));\n        });\n      }\n    } else {\n      this.writeTree_.children.inorderTraversal(function (childName, childTree) {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      });\n    }\n\n    return children;\n  };\n\n  CompoundWrite.prototype.childCompoundWrite = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else {\n      var shadowingNode = this.getCompleteNode(path);\n\n      if (shadowingNode != null) {\n        return new CompoundWrite(new ImmutableTree(shadowingNode));\n      } else {\n        return new CompoundWrite(this.writeTree_.subtree(path));\n      }\n    }\n  };\n  /**\r\n   * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n   * @return Whether this CompoundWrite is empty\r\n   */\n\n\n  CompoundWrite.prototype.isEmpty = function () {\n    return this.writeTree_.isEmpty();\n  };\n  /**\r\n   * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n   * node\r\n   * @param node The node to apply this CompoundWrite to\r\n   * @return The node with all writes applied\r\n   */\n\n\n  CompoundWrite.prototype.apply = function (node) {\n    return applySubtreeWrite(Path.Empty, this.writeTree_, node);\n  };\n\n  CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\n  return CompoundWrite;\n}();\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTree =\n/** @class */\nfunction () {\n  function WriteTree() {\n    /**\r\n     * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n     * applyLocally=false or writes that are completely shadowed by other writes.\r\n     *\r\n     * @type {!CompoundWrite}\r\n     * @private\r\n     */\n    this.visibleWrites_ = CompoundWrite.Empty;\n    /**\r\n     * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n     * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n     * used by transactions).\r\n     *\r\n     * @type {!Array.<!WriteRecord>}\r\n     * @private\r\n     */\n\n    this.allWrites_ = [];\n    this.lastWriteId_ = -1;\n  }\n  /**\r\n   * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTree.prototype.childWrites = function (path) {\n    return new WriteTreeRef(path, this);\n  };\n  /**\r\n   * Record a new overwrite from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Node} snap\r\n   * @param {!number} writeId\r\n   * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n   */\n\n\n  WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n    assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n\n    if (visible === undefined) {\n      visible = true;\n    }\n\n    this.allWrites_.push({\n      path: path,\n      snap: snap,\n      writeId: writeId,\n      visible: visible\n    });\n\n    if (visible) {\n      this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n    }\n\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * Record a new merge from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Object.<string, !Node>} changedChildren\r\n   * @param {!number} writeId\r\n   */\n\n\n  WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n    assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n    this.allWrites_.push({\n      path: path,\n      children: changedChildren,\n      writeId: writeId,\n      visible: true\n    });\n    this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * @param {!number} writeId\r\n   * @return {?WriteRecord}\r\n   */\n\n\n  WriteTree.prototype.getWrite = function (writeId) {\n    for (var i = 0; i < this.allWrites_.length; i++) {\n      var record = this.allWrites_[i];\n\n      if (record.writeId === writeId) {\n        return record;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n   * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n   *\r\n   * @param {!number} writeId\r\n   * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n   * events as a result).\r\n   */\n\n\n  WriteTree.prototype.removeWrite = function (writeId) {\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n    // out of order.\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n    var _this = this;\n\n    var idx = this.allWrites_.findIndex(function (s) {\n      return s.writeId === writeId;\n    });\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n    var writeToRemove = this.allWrites_[idx];\n    this.allWrites_.splice(idx, 1);\n    var removedWriteWasVisible = writeToRemove.visible;\n    var removedWriteOverlapsWithOtherWrites = false;\n    var i = this.allWrites_.length - 1;\n\n    while (removedWriteWasVisible && i >= 0) {\n      var currentWrite = this.allWrites_[i];\n\n      if (currentWrite.visible) {\n        if (i >= idx && this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n          // The removed write was completely shadowed by a subsequent write.\n          removedWriteWasVisible = false;\n        } else if (writeToRemove.path.contains(currentWrite.path)) {\n          // Either we're covering some writes or they're covering part of us (depending on which came first).\n          removedWriteOverlapsWithOtherWrites = true;\n        }\n      }\n\n      i--;\n    }\n\n    if (!removedWriteWasVisible) {\n      return false;\n    } else if (removedWriteOverlapsWithOtherWrites) {\n      // There's some shadowing going on. Just rebuild the visible writes from scratch.\n      this.resetTree_();\n      return true;\n    } else {\n      // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n      if (writeToRemove.snap) {\n        this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\n      } else {\n        var children = writeToRemove.children;\n        each(children, function (childName) {\n          _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\n        });\n      }\n\n      return true;\n    }\n  };\n  /**\r\n   * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n   * No server data is considered.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.getCompleteWriteData = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n   * writes), attempt to calculate a complete snapshot for the given path\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    if (!writeIdsToExclude && !includeHiddenWrites) {\n      var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n\n      if (shadowingNode != null) {\n        return shadowingNode;\n      } else {\n        var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n\n        if (subMerge.isEmpty()) {\n          return completeServerCache;\n        } else if (completeServerCache == null && !subMerge.hasCompleteWrite(Path.Empty)) {\n          // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n          return null;\n        } else {\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return subMerge.apply(layeredCache);\n        }\n      }\n    } else {\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n\n      if (!includeHiddenWrites && merge.isEmpty()) {\n        return completeServerCache;\n      } else {\n        // If the server cache is null, and we don't have a complete cache, we need to return null\n        if (!includeHiddenWrites && completeServerCache == null && !merge.hasCompleteWrite(Path.Empty)) {\n          return null;\n        } else {\n          var filter = function filter(write) {\n            return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (write.path.contains(treePath) || treePath.contains(write.path));\n          };\n\n          var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return mergeAtPath.apply(layeredCache);\n        }\n      }\n    }\n  };\n  /**\r\n   * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n   * Used when creating new views, to pre-fill their complete event children snapshot.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n    var completeChildren = ChildrenNode.EMPTY_NODE;\n    var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n\n    if (topLevelSet) {\n      if (!topLevelSet.isLeafNode()) {\n        // we're shadowing everything. Return the children.\n        topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n          completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n        });\n      }\n\n      return completeChildren;\n    } else if (completeServerChildren) {\n      // Layer any children we have on top of this\n      // We know we don't have a top-level set, so just enumerate existing children\n      var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\n      completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        var node = merge_1.childCompoundWrite(new Path(childName)).apply(childNode);\n        completeChildren = completeChildren.updateImmediateChild(childName, node);\n      }); // Add any complete children we have from the set\n\n      merge_1.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    } else {\n      // We don't have anything to layer on top of. Layer on any children we have\n      // Note that we can return an empty snap if we have a defined delete\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n      merge.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    }\n  };\n  /**\r\n   * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n   * applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!Path} childPath\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n    var path = treePath.child(childPath);\n\n    if (this.visibleWrites_.hasCompleteWrite(path)) {\n      // At this point we can probably guarantee that we're in case 2, meaning no events\n      // May need to check visibility while doing the findRootMostValueAndPath call\n      return null;\n    } else {\n      // No complete shadowing. We're either partially shadowing or not shadowing at all.\n      var childMerge = this.visibleWrites_.childCompoundWrite(path);\n\n      if (childMerge.isEmpty()) {\n        // We're not shadowing at all. Case 1\n        return existingServerSnap.getChild(childPath);\n      } else {\n        // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n        // However this is tricky to find out, since user updates don't necessary change the server\n        // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n        // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n        // only check if the updates change the serverNode.\n        // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n        return childMerge.apply(existingServerSnap.getChild(childPath));\n      }\n    }\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n    var path = treePath.child(childKey);\n    var shadowingNode = this.visibleWrites_.getCompleteNode(path);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      if (existingServerSnap.isCompleteForChild(childKey)) {\n        var childMerge = this.visibleWrites_.childCompoundWrite(path);\n        return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   */\n\n\n  WriteTree.prototype.shadowingWrite = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window.\r\n   */\n\n\n  WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n    var toIterate;\n    var merge = this.visibleWrites_.childCompoundWrite(treePath);\n    var shadowingNode = merge.getCompleteNode(Path.Empty);\n\n    if (shadowingNode != null) {\n      toIterate = shadowingNode;\n    } else if (completeServerData != null) {\n      toIterate = merge.apply(completeServerData);\n    } else {\n      // no children to iterate on\n      return [];\n    }\n\n    toIterate = toIterate.withIndex(index);\n\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n      var nodes = [];\n      var cmp = index.getCompare();\n      var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n      var next = iter.getNext();\n\n      while (next && nodes.length < count) {\n        if (cmp(next, startPost) !== 0) {\n          nodes.push(next);\n        }\n\n        next = iter.getNext();\n      }\n\n      return nodes;\n    } else {\n      return [];\n    }\n  };\n\n  WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n    if (writeRecord.snap) {\n      return writeRecord.path.contains(path);\n    } else {\n      for (var childName in writeRecord.children) {\n        if (writeRecord.children.hasOwnProperty(childName) && writeRecord.path.child(childName).contains(path)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n  /**\r\n   * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n   */\n\n\n  WriteTree.prototype.resetTree_ = function () {\n    this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\n\n    if (this.allWrites_.length > 0) {\n      this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n    } else {\n      this.lastWriteId_ = -1;\n    }\n  };\n  /**\r\n   * The default filter used when constructing the tree. Keep everything that's visible.\r\n   */\n\n\n  WriteTree.DefaultFilter_ = function (write) {\n    return write.visible;\n  };\n  /**\r\n   * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n   * event data at that path.\r\n   */\n\n\n  WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n    var compoundWrite = CompoundWrite.Empty;\n\n    for (var i = 0; i < writes.length; ++i) {\n      var write = writes[i]; // Theory, a later set will either:\n      // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n      // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n      if (filter(write)) {\n        var writePath = write.path;\n        var relativePath = void 0;\n\n        if (write.snap) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n            compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\n          } else ;\n        } else if (write.children) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrites(relativePath, write.children);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n\n            if (relativePath.isEmpty()) {\n              compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\n            } else {\n              var child = safeGet(write.children, relativePath.getFront());\n\n              if (child) {\n                // There exists a child in this node that matches the root path\n                var deepNode = child.getChild(relativePath.popFront());\n                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\n              }\n            }\n          } else ;\n        } else {\n          throw assertionError('WriteRecord should have .snap or .children');\n        }\n      }\n    }\n\n    return compoundWrite;\n  };\n\n  return WriteTree;\n}();\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTreeRef =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path\r\n   * @param {!WriteTree} writeTree\r\n   */\n  function WriteTreeRef(path, writeTree) {\n    this.treePath_ = path;\n    this.writeTree_ = writeTree;\n  }\n  /**\r\n   * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n   * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n   * can lead to a more expensive calculation.\r\n   *\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n  };\n  /**\r\n   * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n   * mix of the given server data and write data.\r\n   *\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n    return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n  };\n  /**\r\n   * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n   * if anything, needs to be applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events should be raised\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n   *\r\n   * @param {!Path} path\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n    return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.shadowingWrite = function (path) {\n    return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window\r\n   *\r\n   * @param {?Node} completeServerData\r\n   * @param {!NamedNode} startPost\r\n   * @param {!number} count\r\n   * @param {boolean} reverse\r\n   * @param {!Index} index\r\n   * @return {!Array.<!NamedNode>}\r\n   */\n\n\n  WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n    return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerCache\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n    return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n  };\n  /**\r\n   * Return a WriteTreeRef for a child.\r\n   *\r\n   * @param {string} childName\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTreeRef.prototype.child = function (childName) {\n    return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n  };\n\n  return WriteTreeRef;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\n\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = ImmutableTree.Empty;\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = new WriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n  /**\r\n   * Apply the data changes for a user-generated set() or transaction() call.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n    // Record pending write.\n    this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n\n    if (!visible) {\n      return [];\n    } else {\n      return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\n    }\n  };\n  /**\r\n   * Apply the data from a user-generated update() call\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n    // Record pending merge.\n    this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\n  };\n  /**\r\n   * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n   *\r\n   * @param revert True if the given write failed and needs to be reverted\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n    if (revert === void 0) {\n      revert = false;\n    }\n\n    var write = this.pendingWriteTree_.getWrite(writeId);\n    var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n\n    if (!needToReevaluate) {\n      return [];\n    } else {\n      var affectedTree_1 = ImmutableTree.Empty;\n\n      if (write.snap != null) {\n        // overwrite\n        affectedTree_1 = affectedTree_1.set(Path.Empty, true);\n      } else {\n        each(write.children, function (pathString, node) {\n          affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\n        });\n      }\n\n      return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\n    }\n  };\n  /**\r\n   * Apply new server data for the specified path..\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n    return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\n  };\n  /**\r\n   * Apply new server data to be merged in at the specified path.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\n  };\n  /**\r\n   * Apply a listen complete for a query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyListenComplete = function (path) {\n    return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\n  };\n  /**\r\n   * Apply new server data for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey != null) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // Query must have been removed already\n      return [];\n    }\n  };\n  /**\r\n   * Apply server data to be merged in for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var changeTree = ImmutableTree.fromObject(changedChildren);\n      var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Apply a listen complete for a tagged query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n    var path = query.path;\n    var serverCache = null;\n    var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n    this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n      var relativePath = Path.relativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n      foundAncestorDefaultView = foundAncestorDefaultView || sp.hasCompleteView();\n    });\n    var syncPoint = this.syncPointTree_.get(path);\n\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      foundAncestorDefaultView = foundAncestorDefaultView || syncPoint.hasCompleteView();\n      serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var serverCacheComplete;\n\n    if (serverCache != null) {\n      serverCacheComplete = true;\n    } else {\n      serverCacheComplete = false;\n      serverCache = ChildrenNode.EMPTY_NODE;\n      var subtree = this.syncPointTree_.subtree(path);\n      subtree.foreachChild(function (childName, childSyncPoint) {\n        var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\n\n        if (completeCache) {\n          serverCache = serverCache.updateImmediateChild(childName, completeCache);\n        }\n      });\n    }\n\n    var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n\n    if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n      // We need to track a tag for this query\n      var queryKey = SyncTree.makeQueryKey_(query);\n      assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n      var tag = SyncTree.getNextQueryTag_();\n      this.queryToTagMap.set(queryKey, tag);\n      this.tagToQueryMap.set(tag, queryKey);\n    }\n\n    var writesCache = this.pendingWriteTree_.childWrites(path);\n    var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\n      var view\n      /** @type !View */\n      = syncPoint.viewForQuery(query);\n      events = events.concat(this.setupListener_(query, view));\n    }\n\n    return events;\n  };\n  /**\r\n   * Remove event callback(s).\r\n   *\r\n   * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n   *\r\n   * @param eventRegistration If null, all callbacks are removed.\r\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return Cancel events, if cancelError was provided.\r\n   */\n\n\n  SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var _this = this; // Find the syncPoint first. Then deal with whether or not it has matching listeners\n\n\n    var path = query.path;\n    var maybeSyncPoint = this.syncPointTree_.get(path);\n    var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n    // not loadsAllData().\n\n    if (maybeSyncPoint && (query.queryIdentifier() === 'default' || maybeSyncPoint.viewExistsForQuery(query))) {\n      /**\r\n       * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n       */\n      var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n\n      if (maybeSyncPoint.isEmpty()) {\n        this.syncPointTree_ = this.syncPointTree_.remove(path);\n      }\n\n      var removed = removedAndEvents.removed;\n      cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n      // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n      // properly set up.\n      //\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n\n      var removingDefault = -1 !== removed.findIndex(function (query) {\n        return query.getQueryParams().loadsAllData();\n      });\n      var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n        return parentSyncPoint.hasCompleteView();\n      });\n\n      if (removingDefault && !covered) {\n        var subtree = this.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          var newViews = this.collectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n          for (var i = 0; i < newViews.length; ++i) {\n            var view = newViews[i],\n                newQuery = view.getQuery();\n            var listener = this.createListenerForView_(view);\n            this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n          }\n        }\n      } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          var defaultTag = null;\n          this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n        } else {\n          removed.forEach(function (queryToRemove) {\n            var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\n\n            _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n          });\n        }\n      } // Now, clear all of the tags we're tracking for the removed listens\n\n\n      this.removeTags_(removed);\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n   * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n   * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n   *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n   *\r\n   * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n   *\r\n   * @param path The path to the data we want\r\n   * @param writeIdsToExclude A specific set to be excluded\r\n   */\n\n\n  SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n    var includeHiddenSets = true;\n    var writeTree = this.pendingWriteTree_;\n    var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n      var relativePath = Path.relativePath(pathSoFar, path);\n      var serverCache = syncPoint.getCompleteServerCache(relativePath);\n\n      if (serverCache) {\n        return serverCache;\n      }\n    });\n    return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n  };\n  /**\r\n   * This collapses multiple unfiltered views into a single view, since we only need a single\r\n   * listener for them.\r\n   */\n\n\n  SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n        var completeView = maybeChildSyncPoint.getCompleteView();\n        return [completeView];\n      } else {\n        // No complete view here, flatten any deeper listens into an array\n        var views_1 = [];\n\n        if (maybeChildSyncPoint) {\n          views_1 = maybeChildSyncPoint.getQueryViews();\n        }\n\n        each(childMap, function (_key, childViews) {\n          views_1 = views_1.concat(childViews);\n        });\n        return views_1;\n      }\n    });\n  };\n\n  SyncTree.prototype.removeTags_ = function (queries) {\n    for (var j = 0; j < queries.length; ++j) {\n      var removedQuery = queries[j];\n\n      if (!removedQuery.getQueryParams().loadsAllData()) {\n        // We should have a tag for this\n        var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n        var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\n        this.queryToTagMap[\"delete\"](removedQueryKey);\n        this.tagToQueryMap[\"delete\"](removedQueryTag);\n      }\n    }\n  };\n  /**\r\n   * Normalizes a query to a query we send the server for listening\r\n   *\r\n   * @return The normalized query\r\n   */\n\n\n  SyncTree.queryForListening_ = function (query) {\n    if (query.getQueryParams().loadsAllData() && !query.getQueryParams().isDefault()) {\n      // We treat queries that load all data as default queries\n      // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n      // from Query\n      return query.getRef();\n    } else {\n      return query;\n    }\n  };\n  /**\r\n   * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n   *\r\n   * @return This method can return events to support synchronous data sources\r\n   */\n\n\n  SyncTree.prototype.setupListener_ = function (query, view) {\n    var path = query.path;\n    var tag = this.tagForQuery_(query);\n    var listener = this.createListenerForView_(view);\n    var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n    var subtree = this.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n    // may need to shadow other listens as well.\n\n    if (tag) {\n      assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n    } else {\n      // Shadow everything at or below this location, this is a default listener.\n      var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n        if (!relativePath.isEmpty() && maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n          return [maybeChildSyncPoint.getCompleteView().getQuery()];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          var queries_1 = [];\n\n          if (maybeChildSyncPoint) {\n            queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) {\n              return view.getQuery();\n            }));\n          }\n\n          each(childMap, function (_key, childQueries) {\n            queries_1 = queries_1.concat(childQueries);\n          });\n          return queries_1;\n        }\n      });\n\n      for (var i = 0; i < queriesToStop.length; ++i) {\n        var queryToStop = queriesToStop[i];\n        this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n      }\n    }\n\n    return events;\n  };\n\n  SyncTree.prototype.createListenerForView_ = function (view) {\n    var _this = this;\n\n    var query = view.getQuery();\n    var tag = this.tagForQuery_(query);\n    return {\n      hashFn: function hashFn() {\n        var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\n        return cache.hash();\n      },\n      onComplete: function onComplete(status) {\n        if (status === 'ok') {\n          if (tag) {\n            return _this.applyTaggedListenComplete(query.path, tag);\n          } else {\n            return _this.applyListenComplete(query.path);\n          }\n        } else {\n          // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n          // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n          var error = errorForServerCode(status, query);\n          return _this.removeEventRegistration(query,\n          /*eventRegistration*/\n          null, error);\n        }\n      }\n    };\n  };\n  /**\r\n   * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n   */\n\n\n  SyncTree.makeQueryKey_ = function (query) {\n    return query.path.toString() + '$' + query.queryIdentifier();\n  };\n  /**\r\n   * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n   */\n\n\n  SyncTree.parseQueryKey_ = function (queryKey) {\n    var splitIndex = queryKey.indexOf('$');\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n    return {\n      queryId: queryKey.substr(splitIndex + 1),\n      path: new Path(queryKey.substr(0, splitIndex))\n    };\n  };\n  /**\r\n   * Return the query associated with the given tag, if we have one\r\n   */\n\n\n  SyncTree.prototype.queryKeyForTag_ = function (tag) {\n    return this.tagToQueryMap.get(tag);\n  };\n  /**\r\n   * Return the tag associated with the given query.\r\n   */\n\n\n  SyncTree.prototype.tagForQuery_ = function (query) {\n    var queryKey = SyncTree.makeQueryKey_(query);\n    return this.queryToTagMap.get(queryKey);\n  };\n  /**\r\n   * Static accessor for query tags.\r\n   */\n\n\n  SyncTree.getNextQueryTag_ = function () {\n    return SyncTree.nextQueryTag_++;\n  };\n  /**\r\n   * A helper method to apply tagged operations\r\n   */\n\n\n  SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n    var syncPoint = this.syncPointTree_.get(queryPath);\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n    var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n    return syncPoint.applyOperation(operation, writesCache,\n    /*serverCache=*/\n    null);\n  };\n  /**\r\n   * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n   *\r\n   * NOTES:\r\n   * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n   *\r\n   * - We call applyOperation() on each SyncPoint passing three things:\r\n   *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n   *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n   *   3. A snapshot Node with cached server data, if we have it.\r\n   *\r\n   * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n   */\n\n\n  SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n    return this.applyOperationHelper_(operation, this.syncPointTree_,\n    /*serverCache=*/\n    null, this.pendingWriteTree_.childWrites(Path.Empty));\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    if (operation.path.isEmpty()) {\n      return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n    } else {\n      var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n      if (serverCache == null && syncPoint != null) {\n        serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n      }\n\n      var events = [];\n      var childName = operation.path.getFront();\n      var childOperation = operation.operationForChild(childName);\n      var childTree = syncPointTree.children.get(childName);\n\n      if (childTree && childOperation) {\n        var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n        var childWritesCache = writesCache.child(childName);\n        events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n\n      if (syncPoint) {\n        events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    var _this = this;\n\n    var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var events = [];\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writesCache.child(childName);\n      var childOperation = operation.operationForChild(childName);\n\n      if (childOperation) {\n        events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n    });\n\n    if (syncPoint) {\n      events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n    }\n\n    return events;\n  };\n  /**\r\n   * Static tracker for next query tag.\r\n   */\n\n\n  SyncTree.nextQueryTag_ = 1;\n  return SyncTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StatsManager =\n/** @class */\nfunction () {\n  function StatsManager() {}\n\n  StatsManager.getCollection = function (repoInfo) {\n    var hashString = repoInfo.toString();\n\n    if (!this.collections_[hashString]) {\n      this.collections_[hashString] = new StatsCollection();\n    }\n\n    return this.collections_[hashString];\n  };\n\n  StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n    var hashString = repoInfo.toString();\n\n    if (!this.reporters_[hashString]) {\n      this.reporters_[hashString] = creatorFunction();\n    }\n\n    return this.reporters_[hashString];\n  };\n\n  StatsManager.collections_ = {};\n  StatsManager.reporters_ = {};\n  return StatsManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = __assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n/**\r\n * @constructor\r\n */\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  /**\r\n   * @param collection\r\n   * @param server_\r\n   */\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.includeStat = function (stat) {\n    this.statsToReport_[stat] = true;\n  };\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    /**\r\n     * @private\r\n     * @type {!Array.<EventList>}\r\n     */\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     * @private\r\n     * @type {!number}\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n  /**\r\n   * @param {!Array.<Event>} eventDataList The new events to queue.\r\n   */\n\n\n  EventQueue.prototype.queueEvents = function (eventDataList) {\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n    var currList = null;\n\n    for (var i = 0; i < eventDataList.length; i++) {\n      var eventData = eventDataList[i];\n      var eventPath = eventData.getPath();\n\n      if (currList !== null && !eventPath.equals(currList.getPath())) {\n        this.eventLists_.push(currList);\n        currList = null;\n      }\n\n      if (currList === null) {\n        currList = new EventList(eventPath);\n      }\n\n      currList.add(eventData);\n    }\n\n    if (currList) {\n      this.eventLists_.push(currList);\n    }\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n   * for the specified path.\r\n   *\r\n   * It is assumed that the new events are all for the specified path.\r\n   *\r\n   * @param {!Path} path The path to raise events for.\r\n   * @param {!Array.<Event>} eventDataList The new events to raise.\r\n   */\n\n\n  EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.equals(path);\n    });\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n   * locations related to the specified change path (i.e. all ancestors and descendants).\r\n   *\r\n   * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n   *\r\n   * @param {!Path} changedPath The path to raise events for.\r\n   * @param {!Array.<!Event>} eventDataList The events to raise\r\n   */\n\n\n  EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n    });\n  };\n  /**\r\n   * @param {!function(!Path):boolean} predicate\r\n   * @private\r\n   */\n\n\n  EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\n    this.recursionDepth_++;\n    var sentAll = true;\n\n    for (var i = 0; i < this.eventLists_.length; i++) {\n      var eventList = this.eventLists_[i];\n\n      if (eventList) {\n        var eventPath = eventList.getPath();\n\n        if (predicate(eventPath)) {\n          this.eventLists_[i].raise();\n          this.eventLists_[i] = null;\n        } else {\n          sentAll = false;\n        }\n      }\n    }\n\n    if (sentAll) {\n      this.eventLists_ = [];\n    }\n\n    this.recursionDepth_--;\n  };\n\n  return EventQueue;\n}();\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\n\n\nvar EventList =\n/** @class */\nfunction () {\n  function EventList(path_) {\n    this.path_ = path_;\n    /**\r\n     * @type {!Array.<Event>}\r\n     * @private\r\n     */\n\n    this.events_ = [];\n  }\n  /**\r\n   * @param {!Event} eventData\r\n   */\n\n\n  EventList.prototype.add = function (eventData) {\n    this.events_.push(eventData);\n  };\n  /**\r\n   * Iterates through the list and raises each event\r\n   */\n\n\n  EventList.prototype.raise = function () {\n    for (var i = 0; i < this.events_.length; i++) {\n      var eventData = this.events_[i];\n\n      if (eventData !== null) {\n        this.events_[i] = null;\n        var eventFn = eventData.getEventRunner();\n\n        if (logger) {\n          log('event: ' + eventData.toString());\n        }\n\n        exceptionGuard(eventFn);\n      }\n    }\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  EventList.prototype.getPath = function () {\n    return this.path_;\n  };\n\n  return EventList;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Array.<string>} allowedEvents_\r\n   */\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   * @param {!string} eventType\r\n   * @param {...*} varArgs\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = __spread(this.listeners_[eventType]);\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @extends {EventEmitter}\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  __extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  __extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   * @param {number} requestNum\r\n   * @param {Array} data\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function _loop_1() {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function _loop_2(i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId An identifier for this connection, used for logging\r\n   * @param repoInfo The info for the endpoint to send data to.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n   *                                         transport session\r\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n   *                                     connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      return repoInfo.connectionURL(LONG_POLLING, params);\n    };\n  }\n  /**\r\n   *\r\n   * @param {function(Object)} onMessage Callback when messages arrive\r\n   * @param {function()} onDisconnect Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      } //Set up a callback that gets triggered once a connection is set up.\n\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2],\n            arg3 = _a[3],\n            arg4 = _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n\n      if (typeof location !== 'undefined' && location.href && location.href.indexOf(FORGE_DOMAIN) !== -1) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param {!Object} data The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   * @param {!string} id\r\n   * @param {!string} pw\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (isNodeSdk()) {\n      return;\n    }\n\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   * @param {*} args\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   * @private\r\n   * @return {Element}\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param {!string} id - The ID of this connection\r\n   * @param {!string} pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param {!string} url - The URL of the script tag.\r\n   * @param {!number} serial - The serial number of the request.\r\n   * @private\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function doNewRequest() {\n      _this.outstandingRequests[\"delete\"](serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function readyStateCB() {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param {!string} url - The URL for the script tag source.\r\n   * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId identifier for this transport\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n  /**\r\n   * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n   * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n   * @return {string} connection url\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!isNodeSdk() && typeof location !== 'undefined' && location.href && location.href.indexOf(FORGE_DOMAIN) !== -1) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    return repoInfo.connectionURL(WEBSOCKET, urlParams);\n  };\n  /**\r\n   *\r\n   * @param onMessage Callback when messages arrive\r\n   * @param onDisconnect Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        var device = this.nodeAdmin ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        }; // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   * @return {boolean}\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param {number} frameCount The number of frames we are expecting from the server\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @param {!String} data\r\n   * @return {?String} Any remaining data to be process, or null if there is none\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param {Object} data The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param {string} str String to send.\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   * @type {number}\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   * @type {number}\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    /**\r\n     * @const\r\n     * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n     */\n    get: function get() {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @param {!RepoInfo} repoInfo\r\n   * @private\r\n   */\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n   * initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n   * transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   * @private\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n  /**\r\n   * @return {!string}\r\n   * @private\r\n   */\n\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ !== 2\n      /* DISCONNECTED */\n      ) {\n          if (conn === _this.rx_) {\n            _this.onPrimaryMessageReceived_(message);\n          } else if (conn === _this.secondaryConn_) {\n            _this.onSecondaryMessageReceived_(message);\n          } else {\n            _this.log_('message on old connection');\n          }\n        }\n    };\n  };\n  /**\r\n   *\r\n   * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {Object} handshake The handshake data returned from the server\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.updateHost(host); // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.conn_.start();\n        this.onConnectionEstablished_(this.conn_, timestamp);\n\n        if (PROTOCOL_VERSION !== version) {\n          warn('Protocol version mismatch detected');\n        } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n        this.tryStartUpgrade_();\n      }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.updateHost(host); // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.close();\n      } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('sending ping on primary.');\n        this.sendData_({\n          t: 'c',\n          d: {\n            t: PING,\n            d: {}\n          }\n        });\n      }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   *\r\n   * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n        if (this.repoInfo_.isCacheableHost()) {\n          PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n          this.repoInfo_.internalHost = this.repoInfo_.host;\n        }\n      } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('Realtime connection lost.');\n      }\n\n    this.close();\n  };\n  /**\r\n   *\r\n   * @param {string} reason\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n        throw 'Connection is not connected';\n      } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n        this.log_('Closing realtime connection.');\n        this.state_ = 2\n        /* DISCONNECTED */\n        ;\n        this.closeConnections_();\n\n        if (this.onDisconnect_) {\n          this.onDisconnect_();\n          this.onDisconnect_ = null;\n        }\n      }\n  };\n  /**\r\n   *\r\n   * @private\r\n   */\n\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, ?string)} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param {string} token The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n  /**\r\n   * @param {Object.<string, *>} stats\r\n   */\n\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  __extends(PersistentConnection, _super);\n  /**\r\n   * @implements {ServerActions}\r\n   * @param repoInfo_ Data about the namespace we are connecting to\r\n   * @param applicationId_ The Firebase App ID for this project\r\n   * @param onDataUpdate_ A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    /** Map<path, Map<queryId, ListenSpec>> */\n\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    _this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(stringify(msg));\n    assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var queryId = query.queryIdentifier();\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n    assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        var indexPath = query.path.toString();\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n\n    if (hash !== undefined) {\n      request[\n      /*hash*/\n      'h'] = hash;\n    } // TODO: Only keep track of the most recent put for a given path?\n\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(message[\n        /*status*/\n        's'], message[\n        /* data */\n        'd']);\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n\n    if (action === 'd') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge*/\n      false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge=*/\n      true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[\n      /*path*/\n      'p'], body[\n      /*query*/\n      'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    var _this = this;\n\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      var onDataMessage_1 = this.onDataMessage_.bind(this);\n      var onReady_1 = this.onReady_.bind(this);\n      var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n      var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      var self_1 = this;\n      var lastSessionId_1 = this.lastSessionId;\n      var canceled_1 = false;\n      var connection_1 = null;\n\n      var closeFn_1 = function closeFn_1() {\n        if (connection_1) {\n          connection_1.close();\n        } else {\n          canceled_1 = true;\n          onDisconnect_1();\n        }\n      };\n\n      var sendRequestFn = function sendRequestFn(msg) {\n        assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n        connection_1.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn_1,\n        sendRequest: sendRequestFn\n      };\n      var forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false; // First fetch auth token, and establish connection after fetching the token was successful\n\n      this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n        if (!canceled_1) {\n          log('getToken() completed. Creating connection.');\n          self_1.authToken_ = result && result.accessToken;\n          connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1,\n          /* onKill= */\n          function (reason) {\n            warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n            self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n          }, lastSessionId_1);\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      }).then(null, function (error) {\n        self_1.log_('Failed to get token: ' + error);\n\n        if (!canceled_1) {\n          if (_this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n\n          closeFn_1();\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map[\"delete\"](queryId);\n\n      if (map.size === 0) {\n        this.listens[\"delete\"](normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e[\"return\"])) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c[\"return\"])) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  __extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n   * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n   * @param {AuthTokenProvider} authTokenProvider_\r\n   * @implements {ServerActions}\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     *\r\n     * @private {!Object.<string, !Object>}\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n  /**\r\n   * @param {!Query} query\r\n   * @param {?number=} tag\r\n   * @return {string}\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n      return query.path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier()); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = query.getQueryParams().toRestQueryStringParameters();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   *\r\n   * @param {!string} pathString\r\n   * @param {!Object.<string, *>} queryStringParameters\r\n   * @param {?function(?number, *=)} callback\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false).then(function (authTokenData) {\n      var authToken = authTokenData && authTokenData.accessToken;\n\n      if (authToken) {\n        queryStringParameters['auth'] = authToken;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * A connection to a single data repository.\r\n */\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient_, app, authTokenProvider_) {\n    this.repoInfo_ = repoInfo_;\n    this.forceRestClient_ = forceRestClient_;\n    this.app = app;\n    this.authTokenProvider_ = authTokenProvider_;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = new SparseSnapshotTree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null; // This key is intentionally not updated if RepoInfo is later changed or replaced\n\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  Repo.prototype.start = function () {\n    var _this = this;\n\n    this.stats_ = StatsManager.getCollection(this.repoInfo_);\n\n    if (this.forceRestClient_ || beingCrawled()) {\n      this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), this.authTokenProvider_); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n      setTimeout(this.onConnectStatus_.bind(this, true), 0);\n    } else {\n      var authOverride = this.app.options['databaseAuthVariableOverride']; // Validate authOverride\n\n      if (typeof authOverride !== 'undefined' && authOverride !== null) {\n        if (typeof authOverride !== 'object') {\n          throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n        }\n\n        try {\n          stringify(authOverride);\n        } catch (e) {\n          throw new Error('Invalid authOverride provided: ' + e);\n        }\n      }\n\n      this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), this.authTokenProvider_, authOverride);\n      this.server_ = this.persistentConnection_;\n    }\n\n    this.authTokenProvider_.addTokenChangeListener(function (token) {\n      _this.server_.refreshAuthToken(token);\n    }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n    this.statsReporter_ = StatsManager.getOrCreateReporter(this.repoInfo_, function () {\n      return new StatsReporter(_this.stats_, _this.server_);\n    });\n    this.transactionsInit_(); // Used for .info.\n\n    this.infoData_ = new SnapshotHolder();\n    this.infoSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        var infoEvents = [];\n\n        var node = _this.infoData_.getNode(query.path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n        // on initial data...\n\n\n        if (!node.isEmpty()) {\n          infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n          setTimeout(function () {\n            onComplete('ok');\n          }, 0);\n        }\n\n        return infoEvents;\n      },\n      stopListening: function stopListening() {}\n    });\n    this.updateInfo_('connected', false);\n    this.serverSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n          var events = onComplete(status, data);\n\n          _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n        }); // No synchronous events for network-backed sync trees\n\n\n        return [];\n      },\n      stopListening: function stopListening(query, tag) {\n        _this.server_.unlisten(query, tag);\n      }\n    });\n  };\n  /**\r\n   * @return The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n  /**\r\n   * @return The namespace represented by the repo.\r\n   */\n\n\n  Repo.prototype.name = function () {\n    return this.repoInfo_.namespace;\n  };\n  /**\r\n   * @return The time in milliseconds, taking the server offset into account if we have one.\r\n   */\n\n\n  Repo.prototype.serverTime = function () {\n    var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\n    var offset = offsetNode.val() || 0;\n    return new Date().getTime() + offset;\n  };\n  /**\r\n   * Generate ServerValues using some variables from the repo object.\r\n   */\n\n\n  Repo.prototype.generateServerValues = function () {\n    return generateWithValues({\n      timestamp: this.serverTime()\n    });\n  };\n  /**\r\n   * Called by realtime when we get new messages from the server.\r\n   */\n\n\n  Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n    // For testing.\n    this.dataUpdateCount++;\n    var path = new Path(pathString);\n    data = this.interceptServerDataCallback_ ? this.interceptServerDataCallback_(pathString, data) : data;\n    var events = [];\n\n    if (tag) {\n      if (isMerge) {\n        var taggedChildren = map(data, function (raw) {\n          return nodeFromJSON$1(raw);\n        });\n        events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n      } else {\n        var taggedSnap = nodeFromJSON$1(data);\n        events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n      }\n    } else if (isMerge) {\n      var changedChildren = map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n    } else {\n      var snap = nodeFromJSON$1(data);\n      events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n    }\n\n    var affectedPath = path;\n\n    if (events.length > 0) {\n      // Since we have a listener outstanding for each transaction, receiving any events\n      // is a proxy for some change having occurred.\n      affectedPath = this.rerunTransactions_(path);\n    }\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n  }; // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\n  Repo.prototype.interceptServerData_ = function (callback) {\n    this.interceptServerDataCallback_ = callback;\n  };\n\n  Repo.prototype.onConnectStatus_ = function (connectStatus) {\n    this.updateInfo_('connected', connectStatus);\n\n    if (connectStatus === false) {\n      this.runOnDisconnectEvents_();\n    }\n  };\n\n  Repo.prototype.onServerInfoUpdate_ = function (updates) {\n    var _this = this;\n\n    each(updates, function (key, value) {\n      _this.updateInfo_(key, value);\n    });\n  };\n\n  Repo.prototype.updateInfo_ = function (pathString, value) {\n    var path = new Path('/.info/' + pathString);\n    var newNode = nodeFromJSON$1(value);\n    this.infoData_.updateSnapshot(path, newNode);\n    var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n  };\n\n  Repo.prototype.getNextWriteId_ = function () {\n    return this.nextWriteId_++;\n  };\n\n  Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n    var _this = this;\n\n    this.log_('set', {\n      path: path.toString(),\n      value: newVal,\n      priority: newPriority\n    }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n    // (b) store unresolved paths on JSON parse\n\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n    var existing = this.serverSyncTree_.calcCompleteEventCache(path);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n    var writeId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n    this.eventQueue_.queueEvents(events);\n    this.server_.put(path.toString(), newNodeUnresolved.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n\n      _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n    var affectedPath = this.abortTransactions_(path);\n    this.rerunTransactions_(affectedPath); // We queued the events above, so just flush the queue here\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n  };\n\n  Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    this.log_('update', {\n      path: path.toString(),\n      value: childrenToMerge\n    }); // Start with our existing data and merge each child into it.\n\n    var empty = true;\n    var serverValues = this.generateServerValues();\n    var changedChildren = {};\n    each(childrenToMerge, function (changedKey, changedValue) {\n      empty = false;\n      changedChildren[changedKey] = resolveDeferredValueTree(path.child(changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\n    });\n\n    if (!empty) {\n      var writeId_1 = this.getNextWriteId_();\n      var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n      this.eventQueue_.queueEvents(events);\n      this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n        var success = status === 'ok';\n\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n\n        var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n\n        _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n\n        _this.callOnCompleteCallback(onComplete, status, errorReason);\n      });\n      each(childrenToMerge, function (changedPath) {\n        var affectedPath = _this.abortTransactions_(path.child(changedPath));\n\n        _this.rerunTransactions_(affectedPath);\n      }); // We queued the events above, so just flush the queue here\n\n      this.eventQueue_.raiseEventsForChangedPath(path, []);\n    } else {\n      log(\"update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n    }\n  };\n  /**\r\n   * Applies all of the changes stored up in the onDisconnect_ tree.\r\n   */\n\n\n  Repo.prototype.runOnDisconnectEvents_ = function () {\n    var _this = this;\n\n    this.log_('onDisconnectEvents');\n    var serverValues = this.generateServerValues();\n    var resolvedOnDisconnectTree = new SparseSnapshotTree();\n    this.onDisconnect_.forEachTree(Path.Empty, function (path, node) {\n      var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\n      resolvedOnDisconnectTree.remember(path, resolved);\n    });\n    var events = [];\n    resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\n      events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n\n      var affectedPath = _this.abortTransactions_(path);\n\n      _this.rerunTransactions_(affectedPath);\n    });\n    this.onDisconnect_ = new SparseSnapshotTree();\n    this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\n  };\n\n  Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n    var _this = this;\n\n    this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.forget(path);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value, priority);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    if (isEmpty(childrenToMerge)) {\n      log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n      return;\n    }\n\n    this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n      if (status === 'ok') {\n        each(childrenToMerge, function (childName, childNode) {\n          var newChildNode = nodeFromJSON$1(childNode);\n\n          _this.onDisconnect_.remember(path.child(childName), newChildNode);\n        });\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n\n  Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n    // a little bit by handling the return values anyways.\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n\n  Repo.prototype.interrupt = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.interrupt(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.resume = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.resume(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.stats = function (showDelta) {\n    if (showDelta === void 0) {\n      showDelta = false;\n    }\n\n    if (typeof console === 'undefined') {\n      return;\n    }\n\n    var stats;\n\n    if (showDelta) {\n      if (!this.statsListener_) {\n        this.statsListener_ = new StatsListener(this.stats_);\n      }\n\n      stats = this.statsListener_.get();\n    } else {\n      stats = this.stats_.get();\n    }\n\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n      return Math.max(currentValue.length, previousValue);\n    }, 0);\n    each(stats, function (stat, value) {\n      var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n      for (var i = stat.length; i < longestName + 2; i++) {\n        paddedStat += ' ';\n      }\n\n      console.log(paddedStat + value);\n    });\n  };\n\n  Repo.prototype.statsIncrementCounter = function (metric) {\n    this.stats_.incrementCounter(metric);\n    this.statsReporter_.includeStat(metric);\n  };\n\n  Repo.prototype.log_ = function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    var prefix = '';\n\n    if (this.persistentConnection_) {\n      prefix = this.persistentConnection_.id + ':';\n    }\n\n    log.apply(void 0, __spread([prefix], varArgs));\n  };\n\n  Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n    if (callback) {\n      exceptionGuard(function () {\n        if (status === 'ok') {\n          callback(null);\n        } else {\n          var code = (status || 'error').toUpperCase();\n          var message = code;\n\n          if (errorReason) {\n            message += ': ' + errorReason;\n          }\n\n          var error = new Error(message); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          error.code = code;\n          callback(error);\n        }\n      });\n    }\n  };\n\n  Object.defineProperty(Repo.prototype, \"database\", {\n    get: function get() {\n      return this.__database || (this.__database = new Database(this));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Repo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n  /**\r\n   * @param {!NamedNode} node\r\n   * @return {boolean}\r\n   */\n\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function cmp(a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!Node} snap\r\n   * @param {string} childKey\r\n   * @param {!Node} childSnap\r\n   * @param {!CompleteChildSource} source\r\n   * @param {?ChildChangeAccumulator} changeAccumulator\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function cmp(a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n  /**\r\n   * @return {boolean} True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   * @return {!number}\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n  /**\r\n   * @return {!Index}\r\n   */\n\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   * @private\r\n   */\n\n\n  QueryParams.prototype.copy_ = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limit = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = '';\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToFirst = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToLast = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n    return newParams;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.startAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.startSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexStartValue_ = indexValue;\n\n    if (key != null) {\n      newParams.startNameSet_ = true;\n      newParams.indexStartName_ = key;\n    } else {\n      newParams.startNameSet_ = false;\n      newParams.indexStartName_ = '';\n    }\n\n    return newParams;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.endAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.endSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexEndValue_ = indexValue;\n\n    if (key !== undefined) {\n      newParams.endNameSet_ = true;\n      newParams.indexEndName_ = key;\n    } else {\n      newParams.endNameSet_ = false;\n      newParams.indexEndName_ = '';\n    }\n\n    return newParams;\n  };\n  /**\r\n   * @param {!Index} index\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.orderBy = function (index) {\n    var newParams = this.copy_();\n    newParams.index_ = index;\n    return newParams;\n  };\n  /**\r\n   * @return {!Object}\r\n   */\n\n\n  QueryParams.prototype.getQueryObject = function () {\n    var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n    var obj = {};\n\n    if (this.startSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n\n      if (this.startNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n      }\n    }\n\n    if (this.endSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n\n      if (this.endNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n      }\n    }\n\n    if (this.limitSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n      var viewFrom = this.viewFrom_;\n\n      if (viewFrom === '') {\n        if (this.isViewFromLeft()) {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n        } else {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n        }\n      }\n\n      obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n    } // For now, priority index is the default, so we only specify if it's some other index\n\n\n    if (this.index_ !== PRIORITY_INDEX) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n    }\n\n    return obj;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n  /**\r\n   * @return {!NodeFilter}\r\n   */\n\n\n  QueryParams.prototype.getNodeFilter = function () {\n    if (this.loadsAllData()) {\n      return new IndexedFilter(this.getIndex());\n    } else if (this.hasLimit()) {\n      return new LimitedFilter(this);\n    } else {\n      return new RangedFilter(this);\n    }\n  };\n  /**\r\n   * Returns a set of REST query string parameters representing this query.\r\n   *\r\n   * @return {!Object.<string,*>} query string parameters\r\n   */\n\n\n  QueryParams.prototype.toRestQueryStringParameters = function () {\n    var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n    var qs = {};\n\n    if (this.isDefault()) {\n      return qs;\n    }\n\n    var orderBy;\n\n    if (this.index_ === PRIORITY_INDEX) {\n      orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n    } else if (this.index_ === VALUE_INDEX) {\n      orderBy = REST_CONSTANTS.VALUE_INDEX;\n    } else if (this.index_ === KEY_INDEX) {\n      orderBy = REST_CONSTANTS.KEY_INDEX;\n    } else {\n      assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\n      orderBy = this.index_.toString();\n    }\n\n    qs[REST_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n    if (this.startSet_) {\n      qs[REST_CONSTANTS.START_AT] = stringify(this.indexStartValue_);\n\n      if (this.startNameSet_) {\n        qs[REST_CONSTANTS.START_AT] += ',' + stringify(this.indexStartName_);\n      }\n    }\n\n    if (this.endSet_) {\n      qs[REST_CONSTANTS.END_AT] = stringify(this.indexEndValue_);\n\n      if (this.endNameSet_) {\n        qs[REST_CONSTANTS.END_AT] += ',' + stringify(this.indexEndName_);\n      }\n    }\n\n    if (this.limitSet_) {\n      if (this.isViewFromLeft()) {\n        qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n      } else {\n        qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n      }\n    }\n\n    return qs;\n  };\n  /**\r\n   * Wire Protocol Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n\n  QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\n    INDEX_START_VALUE: 'sp',\n    INDEX_START_NAME: 'sn',\n    INDEX_END_VALUE: 'ep',\n    INDEX_END_NAME: 'en',\n    LIMIT: 'l',\n    VIEW_FROM: 'vf',\n    VIEW_FROM_LEFT: 'l',\n    VIEW_FROM_RIGHT: 'r',\n    INDEX: 'i'\n  };\n  /**\r\n   * REST Query Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n  QueryParams.REST_QUERY_CONSTANTS_ = {\n    ORDER_BY: 'orderBy',\n    PRIORITY_INDEX: '$priority',\n    VALUE_INDEX: '$value',\n    KEY_INDEX: '$key',\n    START_AT: 'startAt',\n    END_AT: 'endAt',\n    LIMIT_TO_FIRST: 'limitToFirst',\n    LIMIT_TO_LAST: 'limitToLast'\n  };\n  /**\r\n   * Default, empty query parameters\r\n   * @type {!QueryParams}\r\n   * @const\r\n   */\n\n  QueryParams.DEFAULT = new QueryParams();\n  return QueryParams;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  __extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   *\r\n   * @param {!Repo} repo\r\n   * @param {(!Path)} path\r\n   * @extends {Query}\r\n   */\n\n\n  function Reference(repo, path) {\n    var _this = this;\n\n    if (!(repo instanceof Repo)) {\n      throw new Error('new Reference() no longer supported - use app.database().');\n    } // call Query's constructor, passing in the repo and path.\n\n\n    _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\n    return _this;\n  }\n  /** @return {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n\n    if (this.path.isEmpty()) {\n      return null;\n    } else {\n      return this.path.getBack();\n    }\n  };\n  /**\r\n   * @param {!(string|Path)} pathString\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.child = function (pathString) {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (this.path.getFront() === null) {\n        validateRootPathString('Reference.child', 1, pathString, false);\n      } else {\n        validatePathString('Reference.child', 1, pathString, false);\n      }\n    }\n\n    return new Reference(this.repo, this.path.child(pathString));\n  };\n  /** @return {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parentPath = this.path.parent();\n    return parentPath === null ? null : new Reference(this.repo, parentPath);\n  };\n  /** @return {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    var ref = this;\n\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n\n    return ref;\n  };\n  /** @return {!Database} */\n\n\n  Reference.prototype.databaseProp = function () {\n    return this.repo.database;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    validateCallback('Reference.set', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo.setWithPriority(this.path, newVal,\n    /*priority=*/\n    null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\n    validateCallback('Reference.update', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {string|number|null} newPriority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    validateCallback('Reference.setWithPriority', 3, onComplete, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.setWithPriority failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    var deferred = new Deferred();\n    this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.remove = function (onComplete) {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    validateCallback('Reference.remove', 1, onComplete, true);\n    return this.set(null, onComplete);\n  };\n  /**\r\n   * @param {function(*):*} transactionUpdate\r\n   * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n   * @param {boolean=} applyLocally\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    validateCallback('Reference.transaction', 2, onComplete, true); // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.transaction failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    if (applyLocally === undefined) {\n      applyLocally = true;\n    }\n\n    var deferred = new Deferred();\n\n    if (typeof onComplete === 'function') {\n      deferred.promise[\"catch\"](function () {});\n    }\n\n    var promiseComplete = function promiseComplete(error, committed, snapshot) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(new TransactionResult(committed, snapshot));\n      }\n\n      if (typeof onComplete === 'function') {\n        onComplete(error, committed, snapshot);\n      }\n    };\n\n    this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n    return deferred.promise;\n  };\n  /**\r\n   * @param {string|number|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    validateCallback('Reference.setPriority', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*=} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.push = function (value, onComplete) {\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    validateCallback('Reference.push', 2, onComplete, true);\n    var now = this.repo.serverTime();\n    var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n\n    var thennablePushRef = this.child(name);\n    var pushRef = this.child(name);\n    var promise;\n\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(function () {\n        return pushRef;\n      });\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef[\"catch\"] = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      promise[\"catch\"](function () {});\n    }\n\n    return thennablePushRef;\n  };\n  /**\r\n   * @return {!OnDisconnect}\r\n   */\n\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  };\n\n  Object.defineProperty(Reference.prototype, \"database\", {\n    get: function get() {\n      return this.databaseProp();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function get() {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function get() {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function get() {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nQuery.__referenceConstructor = Reference;\nSyncPoint.__referenceConstructor = Reference;\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Node in a Tree.\r\n */\n\nvar TreeNode =\n/** @class */\nfunction () {\n  function TreeNode() {\n    // TODO: Consider making accessors that create children and value lazily or\n    // separate Internal / Leaf 'types'.\n    this.children = {};\n    this.childCount = 0;\n    this.value = null;\n  }\n\n  return TreeNode;\n}();\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {string=} name_ Optional name of the node.\r\n   * @param {Tree=} parent_ Optional parent node.\r\n   * @param {TreeNode=} node_ Optional node to wrap.\r\n   */\n  function Tree(name_, parent_, node_) {\n    if (name_ === void 0) {\n      name_ = '';\n    }\n\n    if (parent_ === void 0) {\n      parent_ = null;\n    }\n\n    if (node_ === void 0) {\n      node_ = new TreeNode();\n    }\n\n    this.name_ = name_;\n    this.parent_ = parent_;\n    this.node_ = node_;\n  }\n  /**\r\n   * Returns a sub-Tree for the given path.\r\n   *\r\n   * @param {!(string|Path)} pathObj Path to look up.\r\n   * @return {!Tree.<T>} Tree for path.\r\n   */\n\n\n  Tree.prototype.subTree = function (pathObj) {\n    // TODO: Require pathObj to be Path?\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n    var child = this,\n        next = path.getFront();\n\n    while (next !== null) {\n      var childNode = safeGet(child.node_.children, next) || new TreeNode();\n      child = new Tree(next, child, childNode);\n      path = path.popFront();\n      next = path.getFront();\n    }\n\n    return child;\n  };\n  /**\r\n   * Returns the data associated with this tree node.\r\n   *\r\n   * @return {?T} The data or null if no data exists.\r\n   */\n\n\n  Tree.prototype.getValue = function () {\n    return this.node_.value;\n  };\n  /**\r\n   * Sets data to this tree node.\r\n   *\r\n   * @param {!T} value Value to set.\r\n   */\n\n\n  Tree.prototype.setValue = function (value) {\n    assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n    this.node_.value = value;\n    this.updateParents_();\n  };\n  /**\r\n   * Clears the contents of the tree node (its value and all children).\r\n   */\n\n\n  Tree.prototype.clear = function () {\n    this.node_.value = null;\n    this.node_.children = {};\n    this.node_.childCount = 0;\n    this.updateParents_();\n  };\n  /**\r\n   * @return {boolean} Whether the tree has any children.\r\n   */\n\n\n  Tree.prototype.hasChildren = function () {\n    return this.node_.childCount > 0;\n  };\n  /**\r\n   * @return {boolean} Whether the tree is empty (no value or children).\r\n   */\n\n\n  Tree.prototype.isEmpty = function () {\n    return this.getValue() === null && !this.hasChildren();\n  };\n  /**\r\n   * Calls action for each child of this tree node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachChild = function (action) {\n    var _this = this;\n\n    each(this.node_.children, function (child, childTree) {\n      action(new Tree(child, _this, childTree));\n    });\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n   *   false.\r\n   * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n   *   parent.\r\n   */\n\n\n  Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n    if (includeSelf && !childrenFirst) {\n      action(this);\n    }\n\n    this.forEachChild(function (child) {\n      child.forEachDescendant(action,\n      /*includeSelf=*/\n      true, childrenFirst);\n    });\n\n    if (includeSelf && childrenFirst) {\n      action(this);\n    }\n  };\n  /**\r\n   * Calls action on each ancestor node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n   *   true to abort.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n   * @return {boolean} true if the action callback returned true.\r\n   */\n\n\n  Tree.prototype.forEachAncestor = function (action, includeSelf) {\n    var node = includeSelf ? this : this.parent();\n\n    while (node !== null) {\n      if (action(node)) {\n        return true;\n      }\n\n      node = node.parent();\n    }\n\n    return false;\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n   * is found, action is called on it and traversal does not continue inside the node.\r\n   * Action is *not* called on this node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n    this.forEachChild(function (child) {\n      if (child.getValue() !== null) {\n        action(child);\n      } else {\n        child.forEachImmediateDescendantWithValue(action);\n      }\n    });\n  };\n  /**\r\n   * @return {!Path} The path of this tree node, as a Path.\r\n   */\n\n\n  Tree.prototype.path = function () {\n    return new Path(this.parent_ === null ? this.name_ : this.parent_.path() + '/' + this.name_);\n  };\n  /**\r\n   * @return {string} The name of the tree node.\r\n   */\n\n\n  Tree.prototype.name = function () {\n    return this.name_;\n  };\n  /**\r\n   * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n   */\n\n\n  Tree.prototype.parent = function () {\n    return this.parent_;\n  };\n  /**\r\n   * Adds or removes this child from its parent based on whether it's empty or not.\r\n   *\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateParents_ = function () {\n    if (this.parent_ !== null) {\n      this.parent_.updateChild_(this.name_, this);\n    }\n  };\n  /**\r\n   * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n   *\r\n   * @param {string} childName The name of the child to update.\r\n   * @param {!Tree.<T>} child The child to update.\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateChild_ = function (childName, child) {\n    var childEmpty = child.isEmpty();\n    var childExists = contains(this.node_.children, childName);\n\n    if (childEmpty && childExists) {\n      delete this.node_.children[childName];\n      this.node_.childCount--;\n      this.updateParents_();\n    } else if (!childEmpty && !childExists) {\n      this.node_.children[childName] = child.node_;\n      this.node_.childCount++;\n      this.updateParents_();\n    }\n  };\n\n  return Tree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n\n/**\r\n * @enum {number}\r\n */\n\n\nvar TransactionStatus;\n\n(function (TransactionStatus) {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\"; // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n\n  TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\"; // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n\n  TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\"; // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n\n  TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\"; // Temporary state used to mark transactions that need to be aborted.\n\n  TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus || (TransactionStatus = {}));\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nRepo.prototype.transactionsInit_ = function () {\n  /**\r\n   * Stores queues of outstanding transactions for Firebase locations.\r\n   *\r\n   * @type {!Tree.<Array.<!Transaction>>}\r\n   * @private\r\n   */\n  this.transactionQueueTree_ = new Tree();\n};\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\n\n\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n  this.log_('transaction on ' + path); // Add a watch to make sure we get server updates.\n\n  var valueCallback = function valueCallback() {};\n\n  var watchRef = new Reference(this, path);\n  watchRef.on('value', valueCallback);\n\n  var unwatcher = function unwatcher() {\n    watchRef.off('value', valueCallback);\n  }; // Initialize transaction.\n\n\n  var transaction = {\n    path: path,\n    update: transactionUpdate,\n    onComplete: onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher: unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  }; // Run transaction initially.\n\n  var currentState = this.getLatestState_(path);\n  transaction.currentInputSnapshot = currentState;\n  var newVal = transaction.update(currentState.val());\n\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n\n    if (transaction.onComplete) {\n      // We just set the input snapshot, so this cast should be safe\n      var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\n      transaction.onComplete(null, false, snapshot);\n    }\n  } else {\n    validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n    transaction.status = TransactionStatus.RUN;\n    var queueNode = this.transactionQueueTree_.subTree(path);\n    var nodeQueue = queueNode.getValue() || [];\n    nodeQueue.push(transaction);\n    queueNode.setValue(nodeQueue); // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our transaction state, since the user could\n    // start new transactions from the event callbacks.\n\n    var priorityForNode = void 0;\n\n    if (typeof newVal === 'object' && newVal !== null && contains(newVal, '.priority')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal, '.priority');\n      assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n    } else {\n      var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) || ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    priorityForNode\n    /** @type {null|number|string} */\n    = priorityForNode;\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    this.sendReadyTransactions_();\n  }\n};\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\n  return this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) || ChildrenNode.EMPTY_NODE;\n};\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.sendReadyTransactions_ = function (node) {\n  var _this = this;\n\n  if (node === void 0) {\n    node = this.transactionQueueTree_;\n  } // Before recursing, make sure any completed transactions are removed.\n\n\n  if (!node) {\n    this.pruneCompletedTransactionsBelowNode_(node);\n  }\n\n  if (node.getValue() !== null) {\n    var queue = this.buildTransactionQueue_(node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n    var allRun = queue.every(function (transaction) {\n      return transaction.status === TransactionStatus.RUN;\n    }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n    if (allRun) {\n      this.sendTransactionQueue_(node.path(), queue);\n    }\n  } else if (node.hasChildren()) {\n    node.forEachChild(function (childNode) {\n      _this.sendReadyTransactions_(childNode);\n    });\n  }\n};\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\n  var _this = this; // Mark transactions as sent and increment retry count!\n\n\n  var setsToIgnore = queue.map(function (txn) {\n    return txn.currentWriteId;\n  });\n  var latestState = this.getLatestState_(path, setsToIgnore);\n  var snapToSend = latestState;\n  var latestHash = latestState.hash();\n\n  for (var i = 0; i < queue.length; i++) {\n    var txn = queue[i];\n    assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    var relativePath = Path.relativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n    snapToSend = snapToSend.updateChild(relativePath\n    /** @type {!Node} */\n    , txn.currentOutputSnapshotRaw);\n  }\n\n  var dataToSend = snapToSend.val(true);\n  var pathToSend = path; // Send the put.\n\n  this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n    _this.log_('transaction put response', {\n      path: pathToSend.toString(),\n      status: status\n    });\n\n    var events = [];\n\n    if (status === 'ok') {\n      // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n      // the callback could trigger more transactions or sets.\n      var callbacks = [];\n\n      for (var i = 0; i < queue.length; i++) {\n        queue[i].status = TransactionStatus.COMPLETED;\n        events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n\n        if (queue[i].onComplete) {\n          // We never unset the output snapshot, and given that this transaction is complete, it should be set\n          var node = queue[i].currentOutputSnapshotResolved;\n          var ref = new Reference(_this, queue[i].path);\n          var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n        }\n\n        queue[i].unwatcher();\n      } // Now remove the completed transactions.\n\n\n      _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path)); // There may be pending transactions that we can now send.\n\n\n      _this.sendReadyTransactions_();\n\n      _this.eventQueue_.raiseEventsForChangedPath(path, events); // Finally, trigger onComplete callbacks.\n\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    } else {\n      // transactions are no longer sent.  Update their status appropriately.\n      if (status === 'datastale') {\n        for (var i = 0; i < queue.length; i++) {\n          if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n          } else {\n            queue[i].status = TransactionStatus.RUN;\n          }\n        }\n      } else {\n        warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.NEEDS_ABORT;\n          queue[i].abortReason = status;\n        }\n      }\n\n      _this.rerunTransactions_(path);\n    }\n  }, latestHash);\n};\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.rerunTransactions_ = function (changedPath) {\n  var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n  var path = rootMostTransactionNode.path();\n  var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n  this.rerunTransactionQueue_(queue, path);\n  return path;\n};\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  } // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n  // the callback could trigger more transactions or sets.\n\n\n  var callbacks = [];\n  var events = []; // Ignore all of the sets we're going to re-run.\n\n  var txnsToRerun = queue.filter(function (q) {\n    return q.status === TransactionStatus.RUN;\n  });\n  var setsToIgnore = txnsToRerun.map(function (q) {\n    return q.currentWriteId;\n  });\n\n  for (var i = 0; i < queue.length; i++) {\n    var transaction = queue[i];\n    var relativePath = Path.relativePath(path, transaction.path);\n    var abortTransaction = false,\n        abortReason = void 0;\n    assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n    } else if (transaction.status === TransactionStatus.RUN) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n      } else {\n        // This code reruns a transaction\n        var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n        transaction.currentInputSnapshot = currentNode;\n        var newData = queue[i].update(currentNode.val());\n\n        if (newData !== undefined) {\n          validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n          var newDataNode = nodeFromJSON$1(newData);\n          var hasExplicitPriority = typeof newData === 'object' && newData != null && contains(newData, '.priority');\n\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          var oldWriteId = transaction.currentWriteId;\n          var serverValues = this.generateServerValues();\n          var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = this.getNextWriteId_(); // Mutates setsToIgnore in place\n\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n          events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        }\n      }\n    }\n\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    events = [];\n\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED; // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n      // So defer the unwatcher until we're done.\n\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          var ref = new Reference(this, queue[i].path); // We set this field immediately, so it's safe to cast to an actual snapshot\n\n          var lastInput\n          /** @type {!Node} */\n          = queue[i].currentInputSnapshot;\n          var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n        } else {\n          callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n        }\n      }\n    }\n  } // Clean up completed transactions.\n\n\n  this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n  for (var i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  } // Try to send the transaction result to the server.\n\n\n  this.sendReadyTransactions_();\n};\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\n  var front; // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\n\n  var transactionNode = this.transactionQueueTree_;\n  front = path.getFront();\n\n  while (front !== null && transactionNode.getValue() === null) {\n    transactionNode = transactionNode.subTree(front);\n    path = path.popFront();\n    front = path.getFront();\n  }\n\n  return transactionNode;\n};\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  var transactionQueue = [];\n  this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n  transactionQueue.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  return transactionQueue;\n};\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n  var _this = this;\n\n  var nodeQueue = node.getValue();\n\n  if (nodeQueue !== null) {\n    for (var i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  node.forEachChild(function (child) {\n    _this.aggregateTransactionQueuesForNode_(child, queue);\n  });\n};\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n  var _this = this;\n\n  var queue = node.getValue();\n\n  if (queue) {\n    var to = 0;\n\n    for (var from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n\n    queue.length = to;\n    node.setValue(queue.length > 0 ? queue : null);\n  }\n\n  node.forEachChild(function (childNode) {\n    _this.pruneCompletedTransactionsBelowNode_(childNode);\n  });\n};\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.abortTransactions_ = function (path) {\n  var _this = this;\n\n  var affectedPath = this.getAncestorTransactionNode_(path).path();\n  var transactionNode = this.transactionQueueTree_.subTree(path);\n  transactionNode.forEachAncestor(function (node) {\n    _this.abortTransactionsOnNode_(node);\n  });\n  this.abortTransactionsOnNode_(transactionNode);\n  transactionNode.forEachDescendant(function (node) {\n    _this.abortTransactionsOnNode_(node);\n  });\n  return affectedPath;\n};\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\n  var queue = node.getValue();\n\n  if (queue !== null) {\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n    // the callback could trigger more transactions or sets.\n    var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n    // can be immediately aborted and removed.\n\n    var events = [];\n    var lastSent = -1;\n\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;else if (queue[i].status === TransactionStatus.SENT) {\n        assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n        lastSent = i; // Mark transaction for abort when it comes back.\n\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n        queue[i].unwatcher();\n        events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n\n        if (queue[i].onComplete) {\n          var snapshot = null;\n          callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n        }\n      }\n    }\n\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      node.setValue(null);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    } // Now fire the callbacks.\n\n\n    this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\n\nvar FirebaseAuthTokenProvider =\n/** @class */\nfunction () {\n  function FirebaseAuthTokenProvider(app_, authProvider_) {\n    var _this = this;\n\n    this.app_ = app_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth_) {\n      authProvider_.get().then(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n  /**\r\n   * @param {boolean} forceRefresh\r\n   * @return {!Promise<FirebaseAuthTokenData>}\r\n   */\n\n\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth_.getToken(forceRefresh)[\"catch\"](function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(function () {\n        return listener(null);\n      }, 0);\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.app_.name + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.app_.options) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return FirebaseAuthTokenProvider;\n}();\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\n\n\nvar EmulatorAdminTokenProvider =\n/** @class */\nfunction () {\n  function EmulatorAdminTokenProvider() {}\n\n  EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  };\n\n  EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  };\n\n  EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n\n  EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () {};\n\n  EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\n  return EmulatorAdminTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\nvar _staticInstance;\n/**\r\n * Creates and caches Repo instances.\r\n */\n\n\nvar RepoManager =\n/** @class */\nfunction () {\n  function RepoManager() {\n    /**\r\n     * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n     */\n    this.repos_ = {};\n    /**\r\n     * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n     * @private {boolean}\r\n     */\n\n    this.useRestClient_ = false;\n  }\n\n  RepoManager.getInstance = function () {\n    if (!_staticInstance) {\n      _staticInstance = new RepoManager();\n    }\n\n    return _staticInstance;\n  }; // TODO(koss): Remove these functions unless used in tests?\n\n\n  RepoManager.prototype.interrupt = function () {\n    var e_1, _a, e_2, _b;\n\n    try {\n      for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].interrupt();\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e[\"return\"])) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c[\"return\"])) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  RepoManager.prototype.resume = function () {\n    var e_3, _a, e_4, _b;\n\n    try {\n      for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_4 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].resume();\n          }\n        } catch (e_4_1) {\n          e_4 = {\n            error: e_4_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e[\"return\"])) _b.call(_e);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c[\"return\"])) _a.call(_c);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n  /**\r\n   * Update an existing repo in place to point to a new host/port.\r\n   */\n\n\n  RepoManager.prototype.applyEmulatorSettings = function (repo, host, port) {\n    repo.repoInfo_ = new RepoInfo(host + \":\" + port,\n    /* secure= */\n    false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\n\n    if (repo.repoInfo_.nodeAdmin) {\n      repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\n    }\n  };\n  /**\r\n   * This function should only ever be called to CREATE a new database instance.\r\n   *\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Database}\r\n   */\n\n\n  RepoManager.prototype.databaseFromApp = function (app, authProvider, url, nodeAdmin) {\n    var dbUrl = url || app.options.databaseURL;\n\n    if (dbUrl === undefined) {\n      if (!app.options.projectId) {\n        fatal(\"Can't determine Firebase Database URL. Be sure to include \" + ' a Project ID when calling firebase.initializeApp().');\n      }\n\n      log('Using default host for project ', app.options.projectId);\n      dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\n    }\n\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    var repoInfo = parsedUrl.repoInfo;\n    var isEmulator;\n    var dbEmulatorHost = undefined;\n\n    if (typeof process !== 'undefined') {\n      dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n    }\n\n    if (dbEmulatorHost) {\n      isEmulator = true;\n      dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n      parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n      repoInfo = parsedUrl.repoInfo;\n    } else {\n      isEmulator = !parsedUrl.repoInfo.secure;\n    }\n\n    var authTokenProvider = nodeAdmin && isEmulator ? new EmulatorAdminTokenProvider() : new FirebaseAuthTokenProvider(app, authProvider);\n    validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n\n    if (!parsedUrl.path.isEmpty()) {\n      fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n    }\n\n    var repo = this.createRepo(repoInfo, app, authTokenProvider);\n    return repo.database;\n  };\n  /**\r\n   * Remove the repo and make sure it is disconnected.\r\n   *\r\n   * @param {!Repo} repo\r\n   */\n\n\n  RepoManager.prototype.deleteRepo = function (repo) {\n    var appRepos = safeGet(this.repos_, repo.app.name); // This should never happen...\n\n    if (!appRepos || safeGet(appRepos, repo.key) !== repo) {\n      fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n    }\n\n    repo.interrupt();\n    delete appRepos[repo.key];\n  };\n  /**\r\n   * Ensures a repo doesn't already exist and then creates one using the\r\n   * provided app.\r\n   *\r\n   * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Repo} The Repo object for the specified server / repoName.\r\n   */\n\n\n  RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\n    var appRepos = safeGet(this.repos_, app.name);\n\n    if (!appRepos) {\n      appRepos = {};\n      this.repos_[app.name] = appRepos;\n    }\n\n    var repo = safeGet(appRepos, repoInfo.toURLString());\n\n    if (repo) {\n      fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n    }\n\n    repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\n    appRepos[repoInfo.toURLString()] = repo;\n    return repo;\n  };\n  /**\r\n   * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n   * @param {boolean} forceRestClient\r\n   */\n\n\n  RepoManager.prototype.forceRestClient = function (forceRestClient) {\n    this.useRestClient_ = forceRestClient;\n  };\n\n  return RepoManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   * @param {!Repo} repoInternal_\r\n   */\n  function Database(repoInternal_) {\n    var _this = this;\n\n    this.repoInternal_ = repoInternal_;\n    /** Track if the instance has been used (root or repo accessed) */\n\n    this.instanceStarted_ = false;\n    this.INTERNAL = {\n      \"delete\": function _delete() {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            this.checkDeleted_('delete');\n            RepoManager.getInstance().deleteRepo(this.repo_);\n            this.repoInternal_ = null;\n            this.rootInternal_ = null;\n            return [2\n            /*return*/\n            ];\n          });\n        });\n      }\n    };\n\n    if (!(repoInternal_ instanceof Repo)) {\n      fatal(\"Don't call new Database() directly - please use firebase.database().\");\n    }\n  }\n\n  Object.defineProperty(Database.prototype, \"repo_\", {\n    get: function get() {\n      if (!this.instanceStarted_) {\n        this.repoInternal_.start();\n        this.instanceStarted_ = true;\n      }\n\n      return this.repoInternal_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Database.prototype, \"root_\", {\n    get: function get() {\n      if (!this.rootInternal_) {\n        this.rootInternal_ = new Reference(this.repo_, Path.Empty);\n      }\n\n      return this.rootInternal_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Database.prototype, \"app\", {\n    get: function get() {\n      return this.repo_.app;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Modify this instance to communicate with the Realtime Database emulator.\r\n   *\r\n   * <p>Note: This method must be called before performing any other operation.\r\n   *\r\n   * @param host the emulator host (ex: localhost)\r\n   * @param port the emulator port (ex: 8080)\r\n   */\n\n  Database.prototype.useEmulator = function (host, port) {\n    this.checkDeleted_('useEmulator');\n\n    if (this.instanceStarted_) {\n      fatal('Cannot call useEmulator() after instance has already been initialized.');\n      return;\n    } // Modify the repo to apply emulator settings\n\n\n    RepoManager.getInstance().applyEmulatorSettings(this.repoInternal_, host, port);\n  };\n\n  Database.prototype.ref = function (path) {\n    this.checkDeleted_('ref');\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      return this.refFromURL(path.toString());\n    }\n\n    return path !== undefined ? this.root_.child(path) : this.root_;\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @param {string} url\r\n   * @return {!Reference} Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    /** @const {string} */\n    var apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    validateArgCount(apiName, 1, 1, arguments.length);\n    var parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\n    validateUrl(apiName, 1, parsedURL);\n    var repoInfo = parsedURL.repoInfo;\n\n    if (!repoInfo.isCustomHost() && repoInfo.host !== this.repo_.repoInfo_.host) {\n      fatal(apiName + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + this.repo_.repoInfo_.host + ')');\n    }\n\n    return this.ref(parsedURL.path.toString());\n  };\n  /**\r\n   * @param {string} apiName\r\n   */\n\n\n  Database.prototype.checkDeleted_ = function (apiName) {\n    if (this.repoInternal_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    this.repo_.interrupt();\n  };\n\n  Database.prototype.goOnline = function () {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    this.repo_.resume();\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    },\n    increment: function increment(delta) {\n      return {\n        '.sv': {\n          'increment': delta\n        }\n      };\n    }\n  };\n  return Database;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\n\n\nvar forceLongPolling = function forceLongPolling() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function forceWebSockets() {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function isWebSocketsAvailable() {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\n\nvar stats = function stats(ref, showDelta) {\n  ref.repo.stats(showDelta);\n};\n\nvar statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nvar dataUpdateCount = function dataUpdateCount(ref) {\n  return ref.repo.dataUpdateCount;\n};\n\nvar interceptServerData = function interceptServerData(ref, callback) {\n  return ref.repo.interceptServerData_(callback);\n};\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app A valid FirebaseApp-like object\r\n * @param url A valid Firebase databaseURL\r\n * @param version custom version e.g. firebase-admin version\r\n * @param customAuthImpl custom auth implementation\r\n */\n\n\nfunction initStandalone(_a) {\n  var app = _a.app,\n      url = _a.url,\n      version = _a.version,\n      customAuthImpl = _a.customAuthImpl,\n      namespace = _a.namespace,\n      _b = _a.nodeAdmin,\n      nodeAdmin = _b === void 0 ? false : _b;\n  setSDKVersion(version);\n  /**\r\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n   * any actual function.\r\n   */\n\n  var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\n  authProvider.setComponent(new Component('auth-internal', function () {\n    return customAuthImpl;\n  }, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n  return {\n    instance: RepoManager.getInstance().databaseFromApp(app, authProvider, url, nodeAdmin),\n    namespace: namespace\n  };\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection;\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n};\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\n\nvar hijackHash = function hijackHash(newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\n\n\nvar ConnectionTarget = RepoInfo;\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\n\nvar queryIdentifier = function queryIdentifier(query) {\n  return query.queryIdentifier();\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\n\n\nvar forceRestClient = function forceRestClient(_forceRestClient) {\n  RepoManager.getInstance().forceRestClient(_forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\nvar name = \"@firebase/database\";\nvar version = \"0.7.0\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, url) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps( // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };"],"sourceRoot":""}