{"version":3,"sources":["webpack:///./src/pages/chat.js"],"names":["Chat"],"mappings":"2FAAA,iBAsQeA,UANF","file":"component---src-pages-chat-js-18d5ba53ec2c5483b3d5.js","sourcesContent":["import React, { useState, useRef } from 'react'\n// import styled from 'styled-components'\n\n// import { useAuthState } from 'react-firebase-hooks/auth'\n// import { useCollectionData } from 'react-firebase-hooks/firestore'\n\n// import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth';\n// import 'firebase/analytics';\n\n// // const fireBaseConfig = {\n// //   apiKey: process.env.FIREBASE_API_KEY,\n// //   appId: process.env.APP_ID\n// // }\n\n// // const {apiKey, appId} = fireBaseConfig\n\n// // if (!apiKey) {\n// //   throw new Error (\n// //     'pls provide Api Key'\n// //   )\n// // }\n\n// firebase.initializeApp({\n//   apiKey: \"AIzaSyDDWjnSjY9Wz7JLodY1vz8JPiFkqNZG0k8\",\n//   authDomain: \"chat-7d1fe.firebaseapp.com\",\n//   databaseURL: \"https://chat-7d1fe.firebaseio.com\",\n//   projectId: \"chat-7d1fe\",\n//   storageBucket: \"chat-7d1fe.appspot.com\",\n//   messagingSenderId: \"614752894781\",\n//   appId: \"1:614752894781:web:fd0603b850d7a59bc44f54\"\n// })\n\n// const auth = firebase.auth();\n// const firestore = firebase.firestore();\n// const analytics = firebase.analytics();\n\n\n\n\n\n\n// const Main = styled.div`\n//   text-align: center;\n//   max-width: 728px;\n//   margin: 0 auto;\n// `\n\n// const Header = styled.h4`\n//   background-color: #181717;\n//   height: 10vh;\n//   min-height: 50px;\n//   color: white;\n//   position: fixed;\n//   width: 100%;\n//   max-width: 728px;\n//   top: 0;\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n//   z-index: 99;\n//   padding: 10px;\n//   box-sizing: border-box;\n// `\n\n// const Section = styled.section`\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: center;\n//   min-height: 100vh;\n//   background-color: rgb(40, 37, 53);\n// `\n\n// const Messages = styled.div`\n//   padding: 10px;\n//   height: 80vh;\n//   margin: 10vh 0 10vh;\n//   overflow-y: scroll;\n//   display: flex;\n//   flex-direction: column;\n//   ::-webkit-scrollbar {\n//     width: 0.25rem;\n//   }\n//   ::-webkit-scrollbar-track {\n//     background: #1e1e24;\n//   }\n//   ::-webkit-scrollbar-thumb {\n//     background: #6649b8;\n//   }\n// `\n// const Text = styled.p`\n//   max-width: 500px;\n//   margin-bottom: 12px;\n//   line-height: 24px;\n//   padding: 10px 20px;\n//   border-radius: 25px;\n//   position: relative;\n//   color: white;\n//   text-align: center;\n//   color: ${({value})=> value === 'received' ? `black` : `white`};\n//   background: ${({value})=> value === 'received' ? `#e5e5ea` : `#0b93f6`};\n  \n\n// `\n// const Image = styled.img`\n//   width: 40px;\n//   height: 40px;\n//   border-radius: 50%;\n//   margin: 2px 5px;\n// `\n\n// const Form = styled.form`\n//   height: 10vh;\n//   position: fixed;\n//   bottom: 0;\n//   background-color: rgb(24, 23, 23);\n//   width: 100%;\n//   max-width: 728px;\n//   display: flex;\n//   font-size: 1.5rem;\n// `\n\n// const FormButton = styled.button`\n//   width: 20%;\n//   background-color: rgb(56, 56, 143);\n// `\n\n// const Input = styled.input`\n//   line-height: 1.5;\n//   width: 100%;\n//   font-size: 1.5rem;\n//   background: rgb(58, 58, 58);\n//   color: white;\n//   outline: none;\n//   border: none;\n//   padding: 0 10px;\n// `\n\n// const Button = styled.button`\n//   background-color: #282c34; /* Green */\n//   border: none;\n//   color: white;\n//   padding: 15px 32px;\n//   text-align: center;\n//   text-decoration: none;\n//   display: inline-block;\n//   cursor: pointer;\n//   font-size: 1.25rem;\n// `\n\n\n// const Span = styled.span`\n// display: flex;\n// align-items: center;\n// flex-direction: ${({value})=> value === 'sent' ? `row-reverse` : `row`};\n// `\n\n// function Chat() {\n//   const auth = firebase.auth()\n//   const firestore = firebase.firestore()\n\n//   const [user] = useAuthState(auth)\n\n//   const SignIn = () => {\n//     const signInWithGoogle = () => {\n//       const provider = new firebase.auth.GoogleAuthProvider()\n//       auth.signInWithPopup(provider)\n//     }\n//     return (\n//       <Button  onClick={signInWithGoogle}>\n//         Sign in with Google\n//       </Button>\n//     )\n//   }\n\n//   const SignOut = () => {\n//     const signOutWithGoogle = () => {\n//       auth.signOut()\n//     }\n//     return (\n//       auth.currentUser && <Button onClick={signOutWithGoogle}>Sign Out</Button>\n//     )\n//   }\n\n//   const ChatRoom = () => {\n//     const messagesRef = firestore.collection('messages')\n//     const query = messagesRef.orderBy('createdAt').limit(25)\n//     const [messages] = useCollectionData(query, { idField: 'id' })\n//     const [formValue, setFormValue] = useState('')\n//     const fake = useRef()\n//     const sendMessage = async (e) => {\n//       e.preventDefault()\n\n//       const { uid, photoURL } = auth.currentUser\n\n//       await messagesRef.add({\n//         text: formValue,\n//         createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n//         uid,\n//         photoURL,\n//       })\n//       setFormValue('')\n\n//       fake.current.scrollIntoView({ behavior: 'smooth' })\n//     }\n\n//     return (\n//       <>\n//         <Messages>\n//           {messages &&\n//             messages.map((msg, i) => <ChatMessage message={msg} key={i} />)}\n//           <span ref={fake}></span>\n//         </Messages>\n\n//         <Form onSubmit={sendMessage}>\n//           <Input\n//             value={formValue}\n//             onChange={(e) => setFormValue(e.target.value)}\n//             placeholder=\"say something nice\"\n//           />\n\n//           <FormButton type=\"submit\">üöÄ</FormButton>\n//         </Form>\n//       </>\n//     )\n//   }\n\n//   const ChatMessage = (props) => {\n//     const { text, uid, photoURL } = props.message\n\n//     const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received'\n\n//     return (\n  \n//    <Span value={`${messageClass}`}>\n//         <Image src={photoURL || `https://avatars.dicebear.com/api/male/john.svg?mood[]=happy`} alt=\"\" />\n//         <Text value={`${messageClass}`} >{text}</Text>\n  \n//       </Span>\n//     )\n//   }\n\n//   return (\n//     <>\n//       <Main>\n//         <Header>\n//           <h1>‚öõÔ∏èüî•üí¨</h1>\n//           <SignOut />\n//         </Header>\n//         <Section>{user ? <ChatRoom /> : <SignIn />}</Section>\n//       </Main>\n//     </>\n//   )\n// }\n\nconst Chat = () => {\n  <div>\n    dziala\n  </div>\n}\n\nexport default Chat\n"],"sourceRoot":""}